(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{461:function(t,_,v){"use strict";v.r(_);var e=v(1),a=Object(e.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"http-1-x和http-2的区别是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-1-x和http-2的区别是什么"}},[t._v("#")]),t._v(" HTTP/1.x和HTTP/2的区别是什么？")]),t._v(" "),_("ol",[_("li",[_("code",[t._v("HTTP2")]),t._v(" 使用的是二进制传送，"),_("code",[t._v("HTTP1.X")]),t._v(" 是文本（字符串传送）。二进制传送的单位是帧和流。帧组成了流，同时流还有流ID标识。")]),t._v(" "),_("li",[_("code",[t._v("HTTP2")]),t._v(" 支持多路复用，因为有流ID，所以同一个HTTP请求实现多个HTTP请求传输变成了可能，可以通过流ID来标识究竟是哪个流从而定位到是哪个HTTP请求。")]),t._v(" "),_("li",[_("code",[t._v("HTTP2")]),t._v(" 头部压缩，"),_("code",[t._v("HTTP2")]),t._v(" 通过 "),_("code",[t._v("gzip")]),t._v(" 和 "),_("code",[t._v("compress")]),t._v(" 压缩头部然后再发送，同时通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。")]),t._v(" "),_("li",[_("code",[t._v("HTTP2")]),t._v(" 支持服务器推送，"),_("code",[t._v("HTTP2")]),t._v(" 支持在未经客户端许可情况下，主动向客户端推送内容。")])]),t._v(" "),_("h2",{attrs:{id:"http的基本优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http的基本优化"}},[t._v("#")]),t._v(" HTTP的基本优化")]),t._v(" "),_("p",[t._v("影响一个 "),_("code",[t._v("HTTP")]),t._v(" 网络请求的因素主要有两个："),_("strong",[t._v("带宽和延迟")]),t._v("。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("带宽：")]),t._v(" 如果说我们还停留在拨号上网的阶段，带宽可能会成为一个比较严重影响请求的问题，但是现在网络基础建设已经使得带宽得到极大的提升，我们不再会担心由带宽而影响网速，那么就只剩下延迟了。")]),t._v(" "),_("li",[_("strong",[t._v("延迟：")]),t._v(" "),_("ul",[_("li",[t._v("浏览器阻塞：浏览器会因为一些原因阻塞请求。浏览器对于同一个域名，同时只能有4个连接（根据浏览器内核不同有所差异），超过浏览器最大连接限制，后续请求就会被阻塞。")]),t._v(" "),_("li",[t._v("DNS查询：浏览器需要知道目标服务器的 "),_("code",[t._v("IP")]),t._v(" 才能建立连接。将域名解析为 "),_("code",[t._v("IP")]),t._v(" 的这个系统就是 "),_("code",[t._v("DNS")]),t._v("。这个通常可以利用 "),_("code",[t._v("DNS")]),t._v(" 缓存结果来达到减少这个时间的目的。")]),t._v(" "),_("li",[t._v("建立连接："),_("code",[t._v("HTTP")]),t._v(" 是基于 "),_("code",[t._v("TCP")]),t._v(" 协议的，浏览器最快也要在第三次握手时才能捎带 "),_("code",[t._v("HTTP")]),t._v(" 请求报文，达到真正的建立连接，但是这些连接无法复用会导致每次请求都需要经历三次握手和慢启动。三次握手在高延迟场景下影响较明显，慢启动则对文件类的请求影响较大。")])])])]),t._v(" "),_("h2",{attrs:{id:"https与http的一些区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https与http的一些区别"}},[t._v("#")]),t._v(" HTTPS与HTTP的一些区别")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("HTPP")]),t._v(" 协议运行在 "),_("code",[t._v("TCP")]),t._v(" 上，所有的传输内容都是明文，"),_("code",[t._v("HTTPS")]),t._v(" 运行在 "),_("code",[t._v("SSL/TLS")]),t._v(" 之上，"),_("code",[t._v("SSL/TLS")]),t._v(" 运行在 "),_("code",[t._v("TCP")]),t._v(" 之上，所有传输的内容都结果加密的。")]),t._v(" "),_("li",[_("code",[t._v("HTTP")]),t._v(" 和 "),_("code",[t._v("HTTPS")]),t._v(" 使用的是完全不同的连接方式，用的端口也不一样，前者是 "),_("code",[t._v("80")]),t._v("，后者是 "),_("code",[t._v("443")]),t._v("。")]),t._v(" "),_("li",[_("code",[t._v("HTTPS")]),t._v(" 可以有效的防止运营商劫持，解决了防劫持的一个大问题。\n"),_("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202311111540419.png",alt:"image.png"}})])]),t._v(" "),_("h2",{attrs:{id:"http2的多路复用和http1-x中的长连接复用有什么区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http2的多路复用和http1-x中的长连接复用有什么区别"}},[t._v("#")]),t._v(" HTTP2的多路复用和HTTP1.X中的长连接复用有什么区别？")]),t._v(" "),_("ul",[_("li",[t._v("HTTP/1.X：一次请求-响应，建立一个连接，用完关闭；每个请求都要建立一个连接。")]),t._v(" "),_("li",[t._v("HTTP/1.1 Pipeling 解决方式为，若干个请求排队串行化单线程处理，后面的请求等待前面请求的返回才能获得执行机会，一旦有某请求超时等，后续请求只能被阻塞，毫无办法，也就是人们常说的线头阻塞。")]),t._v(" "),_("li",[t._v("HTTP/2 多个请求可以同时在一个连接上并行执行。某个请求任务耗时严重，不会影响到其他连接的正常执行。具体如图")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202311111548455.png",alt:"image.png"}})]),t._v(" "),_("h2",{attrs:{id:"客户端推送到底是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#客户端推送到底是什么"}},[t._v("#")]),t._v(" 客户端推送到底是什么？")]),t._v(" "),_("p",[t._v("客户端推送能把客户端所需要的资源伴随着 "),_("code",[t._v("index.html")]),t._v(" 一起发送到客户端，省去了客户端重复请求的步骤。正是因为没有发起请求，建立连接等操作，所以静态资源通过服务器端推送的方式可以极大地提升速度。具体如下：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("普通的客户端请求过程：\n"),_("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202311111607121.png",alt:"image.png"}})])]),t._v(" "),_("li",[_("p",[t._v("客户端推送的过程\n"),_("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202311111608941.png",alt:"image.png"}})])])]),t._v(" "),_("h2",{attrs:{id:"为什么需要头部压缩"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要头部压缩"}},[t._v("#")]),t._v(" 为什么需要头部压缩？")]),t._v(" "),_("p",[t._v("假定一个页面有100个资源需要加载，而每一次请求都有1kb的消息头，则至少需要多消耗100kb来获取这些消息头。HTTP2 可以维护一个字典，差量更新 HTTP 头部，大大降低因头部传输产生的流量。")]),t._v(" "),_("h2",{attrs:{id:"http2多路复用有什么好处"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http2多路复用有什么好处"}},[t._v("#")]),t._v(" HTTP2多路复用有什么好处？")]),t._v(" "),_("p",[t._v("HTTP 性能优化的关键并不在高带宽，而是低延迟。TCP 连接会随着时间进行自我【协调】，起初会限制连接的最大速度，如果数据传输成功，会随着时间推移提高传输的速度。这种协调则被称为TCP慢启动。由于这种原因，让本就具有突发性和短暂性的HTTP连接变得十分低效。\nHTTP/2通过让所有数据流共用同一个连接，可以更有效地使用TCP连接，让高带宽也能真正的服务于HTTP的性能提升。")])])}),[],!1,null,null,null);_.default=a.exports}}]);