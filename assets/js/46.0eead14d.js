(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{466:function(t,a,s){"use strict";s.r(a);var _=s(1),v=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第一章-计算机系统概论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-计算机系统概论"}},[t._v("#")]),t._v(" 第一章 计算机系统概论")]),t._v(" "),a("h2",{attrs:{id:"现代计算机的原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现代计算机的原型"}},[t._v("#")]),t._v(" 现代计算机的原型")]),t._v(" "),a("p",[a("strong",[t._v("冯诺依曼结构最重要的思想是什么？")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("“存储程序”")]),t._v(" 工作方式："),a("font",{attrs:{color:"red"}},[t._v("任何要计算机完成的工作都要先被编写成程序，然后将程序和原始数据送入主存并启动执行。一旦程序被启动，计算机应能在不需要操作人员干预下，自动完成逐条取出指令和执行指令的任务。")])],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1684895661907.png",alt:"1684895661907.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1684895895285.png",alt:"1684895895285.png"}})]),t._v(" "),a("p",[a("strong",[t._v("冯诺依曼结构的主要思想")])]),t._v(" "),a("ul",[a("li",[t._v("计算机应由"),a("font",{attrs:{color:"red"}},[t._v("运算器、控制器、存储器、输入设备和输出设备")]),t._v("五个基本部件组成")],1),t._v(" "),a("li",[t._v("各基本部件的功能是：\n"),a("ul",[a("li",[t._v("存储器不仅能存放数据，也能存放指令，形式上两者没有区别，但计算机应能区分数据还是指令")]),t._v(" "),a("li",[t._v("控制器应能自动取出指令来执行")]),t._v(" "),a("li",[t._v("运算器应能进行加/减/乘/除四种基本算术运算，并且能进行一些逻辑运算和附加运算")]),t._v(" "),a("li",[t._v("操作人员可以通过输入设备、输出设备和主机进行通信")])])]),t._v(" "),a("li",[t._v("内部以"),a("font",{attrs:{color:"red"}},[t._v("二进制")]),t._v("表示指令和数据。每条指令由"),a("font",{attrs:{color:"red"}},[t._v("操作码")]),t._v("和"),a("font",{attrs:{color:"red"}},[t._v("地址码")]),t._v("两部分组成。操作码指出操作类型，地址码指出操作数的地址。由一串指令组成程序")],1),t._v(" "),a("li",[t._v("采用"),a("font",{attrs:{color:"red"}},[t._v("“存储程序”")]),t._v("工作方式")],1)]),t._v(" "),a("p",[a("strong",[t._v("现代计算机结构模型")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686017890476.png",alt:"1686017890476.png"}})]),t._v(" "),a("ul",[a("li",[t._v("ALU：算术逻辑部件")]),t._v(" "),a("li",[t._v("GPRs：通用寄存器组")]),t._v(" "),a("li",[t._v("IR：指令寄存器")]),t._v(" "),a("li",[t._v("PC：程序计数器")]),t._v(" "),a("li",[t._v("MAR：存储器地址寄存器")]),t._v(" "),a("li",[t._v("MDR：存储器数据寄存器")])]),t._v(" "),a("p",[a("strong",[t._v("计算机是如何工作的？")])]),t._v(" "),a("ul",[a("li",[t._v("程序执行前\n"),a("ul",[a("li",[t._v("数据和指令事先存放在存储器中，每条指令和每个数据都有地址，指令按序存放，指令由OP（操作码）、ADDR（地址码）字段组成，程序起始地址置PC")])])]),t._v(" "),a("li",[t._v("开始执行程序\n"),a("ul",[a("li",[t._v("第一步：根据PC取指令")]),t._v(" "),a("li",[t._v("第二步：指令译码")]),t._v(" "),a("li",[t._v("第三步：取操作数")]),t._v(" "),a("li",[t._v("第四步：取指令执行")]),t._v(" "),a("li",[t._v("第五步：回写结果")]),t._v(" "),a("li",[t._v("第六步：修改PC的值，继续执行下一条指令")])])])]),t._v(" "),a("p",[a("strong",[t._v("指令和数据")])]),t._v(" "),a("ul",[a("li",[t._v("程序启动前，指令和数据都存放在存储器中，形式上没有差别，都是0/1序列")]),t._v(" "),a("li",[t._v("采用"),a("font",{attrs:{color:"red"}},[t._v("”存储程序“")]),t._v("工作方式：\n"),a("ul",[a("li",[a("font",{attrs:{color:"blue"}},[t._v("程序由指令组成，程序被启动后，计算机能自动取出一条一条的指令执行，在执行过程中无需人的干预。")])],1)])],1),t._v(" "),a("li",[a("font",{attrs:{color:"red"}},[t._v("指令中需要给出的信息：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"blue"}},[t._v("操作性质（操作码）")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"blue"}},[t._v("源操作数1")]),t._v("或/和"),a("font",{attrs:{color:"blue"}},[t._v("源操作数2")]),a("font",{attrs:{color:"green"}},[t._v("（立即数、寄存器编号、存储地址）")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"blue"}},[t._v("目的操作数地址")]),a("font",{attrs:{color:"green"}},[t._v("（寄存器编号、存储地址）")])],1),t._v(" "),a("li",[t._v("存储地址的描述与"),a("font",{attrs:{color:"red"}},[t._v("操作数的数据结构")]),t._v("有关")],1)])],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686020057774.png",alt:"1686020057774.png"}})]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("对于R型指令，根据功能说明，可以实现寄存器之间的算术逻辑运算，包括加、减、与、或等操作。具体来说，根据op字段指定的操作码，可以实现R[rt]←R[rt] op R[rs]（将目标寄存器R[rt]中的值和源寄存器R[rs]中的值进行op运算，然后将运算结果存储到目标寄存器R[rt]中）或R[rt]←R[rs]（将源寄存器R[rs]中的值直接复制到目标寄存器R[rt]中，这种情况下op字段不起作用，可以设置为任意值。）操作，将运算结果存储到目标寄存器R[rt]中。")]),t._v(" "),a("li",[t._v("对于M型指令，根据功能说明，可以实现存储器和寄存器之间的数据传输，包括村存储器中读取数据或将寄存器中的数据写入存储器中。具体来说，根据op字段指定的操作码，可以实现R[0]←M[addr]或M[addr]←R[0]操作，将存储器中指定地址addr处的数据读入寄存器R[0]中或将寄存器R[0]中的数据写入存储器中指定地址addr处。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686022225471.png",alt:"1686022225471.png"}})]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("主存地址")]),t._v(" "),a("th",[t._v("主存单元   内容")]),t._v(" "),a("th",[t._v("内容说明（Ii表示第i条指令）")]),t._v(" "),a("th",[t._v("指令的符号   表示")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0")]),t._v(" "),a("td",[t._v("1110 0110")]),t._v(" "),a("td",[t._v("I1：   R[0] ←   M[6]；op=1110：取数操作")]),t._v(" "),a("td",[t._v("load r0, 6#")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0000 0100")]),t._v(" "),a("td",[t._v("I2：   R[1] ←   R[0]；op=0000：传送操作")]),t._v(" "),a("td",[t._v("mov r1, r0")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("1110 0101")]),t._v(" "),a("td",[t._v("I3：   R[0] ←   M[5]；op=1110：取数操作")]),t._v(" "),a("td",[t._v("load r0, 5#")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("0001 0001")]),t._v(" "),a("td",[t._v("I4：   R[0] ←   R[0] + R[1]；op=0001：加操作")]),t._v(" "),a("td",[t._v("add r0, r1")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("1111 0111")]),t._v(" "),a("td",[t._v("I5：   M[7]←   R[0]；op=1111：存数操作")]),t._v(" "),a("td",[t._v("store 7#, r0")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686022444589.png",alt:"1686022444589.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686022568046.png",alt:"1686022568046.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686022639645.png",alt:"1686022639645.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686022709921.png",alt:"1686022709921.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686022871334.png",alt:"1686022871334.png"}})]),t._v(" "),a("p",[a("strong",[t._v("用汇编语言开发程序")])]),t._v(" "),a("ul",[a("li",[t._v("汇编语言（源）程序由"),a("font",{attrs:{color:"red"}},[t._v("汇编指令")]),t._v("构成")],1),t._v(" "),a("li",[a("font",{attrs:{color:"red"}},[t._v("汇编指令是指用助记符和标号来表示的指令（与机器指令一一对应）")])],1)]),t._v(" "),a("p",[t._v("指令是指：")]),t._v(" "),a("ul",[a("li",[t._v("包含操作码和操作数或其地址码（"),a("font",{attrs:{color:"red"}},[t._v("机器指令用二进制表示，汇编指令用符号表示")]),t._v("）")],1),t._v(" "),a("li",[t._v("只能描述：\n"),a("ul",[a("li",[t._v("取（或存一个数）")]),t._v(" "),a("li",[t._v("两个数加（或减、乘、除、与、或等）")]),t._v(" "),a("li",[t._v("根据运算结果判断是否转移执行")])])])]),t._v(" "),a("p",[t._v("汇编语言出现：")]),t._v(" "),a("ul",[a("li",[t._v("用助记符表示操作码")]),t._v(" "),a("li",[t._v("用标号表示位置")]),t._v(" "),a("li",[t._v("用助记符表示寄存器")])]),t._v(" "),a("p",[t._v("汇编的优缺点")]),t._v(" "),a("p",[t._v("优点")]),t._v(" "),a("ul",[a("li",[t._v("不会因为增减指令而需要修改其他指令")]),t._v(" "),a("li",[t._v("不需记忆指令码，编写方便")]),t._v(" "),a("li",[t._v("可读性比机器语言强")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("需要将汇编语言转换为机器语言")]),t._v(" "),a("li",[t._v("用汇编程序转换")])]),t._v(" "),a("p",[a("strong",[a("font",{attrs:{color:"red"}},[t._v("机器语言和汇编语言都是面向机器结构的语言，故它们统称为机器级语言")])],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686023999899.png",alt:"1686023999899.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/1686024360599.png",alt:"1686024360599.png"}})]),t._v(" "),a("p",[a("strong",[t._v("计算机系统抽象层的转换")])]),t._v(" "),a("ul",[a("li",[t._v("程序执行的结构不仅取决于"),a("font",{attrs:{color:"red"}},[t._v("算法、程序编写")]),t._v("而且取决于"),a("font",{attrs:{color:"red"}},[t._v("语言处理系统、操作系统、ISA（指令集体系结构）、微体系结构")])],1),t._v(" "),a("li",[t._v("功能转换：上层是下层的抽象，下层是上层的实现，"),a("font",{attrs:{color:"red"}},[t._v("底层为上层提供支撑环境")])],1)]),t._v(" "),a("p",[a("strong",[t._v("计算机系统的不同用户")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("最终用户")]),t._v("工作在由应用程序提供的最上面的抽象层\n"),a("font",{attrs:{color:"red"}},[t._v("系统管理员")]),t._v("工作在由操作系统提供的抽象层\n"),a("font",{attrs:{color:"red"}},[t._v("应用程序员")]),t._v("工作在由语言处理系统（"),a("font",{attrs:{color:"blue"}},[t._v("主要有编译器和汇编器")]),t._v("）提供的抽象层\n"),a("font",{attrs:{color:"green"}},[t._v("语言处理系统")]),t._v("建立在"),a("font",{attrs:{color:"green"}},[t._v("操作系统")]),t._v("之上\n"),a("font",{attrs:{color:"red"}},[t._v("ISA处于软件和硬件的交界面（接口）")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("ISA是对硬件的抽象，所有软件功能都建立在ISA之上")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230607102049.png",alt:"image.png"}})],1),t._v(" "),a("p",[a("strong",[t._v("指令集体系结构（ISA）")])]),t._v(" "),a("ul",[a("li",[t._v("ISA是指"),a("font",{attrs:{color:"red"}},[t._v("指令集体系结构")]),t._v("，简称"),a("font",{attrs:{color:"red"}},[t._v("指令系统")])],1),t._v(" "),a("li",[t._v("ISA是一种规约，它规定了"),a("font",{attrs:{color:"red"}},[t._v("如何使用硬件")]),t._v(" "),a("ul",[a("li",[t._v("可执行的指令集合，包括"),a("font",{attrs:{color:"red"}},[t._v("指令格式、操作种类")]),t._v("以及每种操作对应的操作数的相应规定")],1),t._v(" "),a("li",[t._v("指令可以接受的"),a("font",{attrs:{color:"red"}},[t._v("操作数的类型")])],1),t._v(" "),a("li",[t._v("操作数所能存放的寄存器组的结构，包括每个"),a("font",{attrs:{color:"red"}},[t._v("寄存器的名称、编号、长度和用途")])],1),t._v(" "),a("li",[t._v("操作数所能存放的"),a("font",{attrs:{color:"red"}},[t._v("存储空间的大小和编址方式")])],1),t._v(" "),a("li",[t._v("操作数在存储空间存放时按照"),a("font",{attrs:{color:"red"}},[t._v("大端还是小端方式存放")])],1),t._v(" "),a("li",[t._v("指令获取操作数的方式，即"),a("font",{attrs:{color:"red"}},[t._v("寻址方式")])],1),t._v(" "),a("li",[t._v("指令执行过程的控制方式，包括"),a("font",{attrs:{color:"red"}},[t._v("程序计数器（PC）、条件码 定义")]),t._v("等")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("计算机系统核心层之间的关联")]),t._v("\nABI是为运行在"),a("font",{attrs:{color:"blue"}},[t._v("特定ISA及特定操作系统之上")]),t._v("的应用程序中所遵循的一种"),a("font",{attrs:{color:"red"}},[t._v("机器级目标代码层接口")]),t._v("\n描述了"),a("font",{attrs:{color:"blue"}},[t._v("应用程序和操作系统之间")]),t._v("、"),a("font",{attrs:{color:"red"}},[t._v("应用程序和所调用的库之间")]),t._v("、"),a("font",{attrs:{color:"green"}},[t._v("不同组成部分（如过程或函数）之间")]),t._v("在较低层次上的机器级代码接口")],1),t._v(" "),a("p",[a("strong",[t._v("计算机性能的基本评价指标")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("吞吐率")]),t._v("和"),a("font",{attrs:{color:"red"}},[t._v("响应时间")]),t._v("是考量一个计算机系统性能的两个"),a("font",{attrs:{color:"red"}},[t._v("基本指标")]),t._v("。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("吞吐率")]),t._v("表示"),a("font",{attrs:{color:"green"}},[t._v("单位时间内所完成的工作量")]),t._v("，类似的概念是"),a("font",{attrs:{color:"red"}},[t._v("带宽")]),t._v("，它表示"),a("font",{attrs:{color:"green"}},[t._v("单位时间内所传输\n的信息量")])],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("响应时间")]),t._v("是指"),a("font",{attrs:{color:"green"}},[t._v("从作业提交开始到作业完成所用的时间")]),t._v("，类似的概念是"),a("font",{attrs:{color:"red"}},[t._v("执行时间")]),t._v("和"),a("font",{attrs:{color:"red"}},[t._v("等待时间")]),t._v("，它们都是用来表示"),a("font",{attrs:{color:"green"}},[t._v("一个任务所用的时间的度量值")]),t._v("。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("CPU时间")]),t._v("指"),a("font",{attrs:{color:"green"}},[t._v("CPU用于本程序执行的时间")]),t._v("，它又包括以下两部分：\n①"),a("font",{attrs:{color:"red"}},[t._v("用户CPU时间")]),t._v("，指"),a("font",{attrs:{color:"green"}},[t._v("真正用于运行用户程序代码的时间")]),t._v("\n②"),a("font",{attrs:{color:"red"}},[t._v("系统CPU时间")]),t._v("，指"),a("font",{attrs:{color:"green"}},[t._v("为了执行用户程序而需要CPU运行操作系统程序的时间")]),t._v("。\n"),a("font",{attrs:{color:"red"}},[t._v("其他时间")]),t._v("指"),a("font",{attrs:{color:"green"}},[t._v("等待I/O操作完成的时间或CPU用于执行其他用户程序的时间")]),t._v("。")],1),t._v(" "),a("p",[t._v("计算机系统性能评价主要考虑的是CPU性能，系统性能和CPU性能"),a("font",{attrs:{color:"red"}},[t._v("并不等价")]),t._v("，"),a("font",{attrs:{color:"red"}},[t._v("系统性能")]),t._v("指系统的响应时间；而"),a("font",{attrs:{color:"red"}},[t._v("CPU性能")]),t._v("是指用户CPU时间")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("基本的性能评价标准是：CPU的执行时间")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230607111948.png",alt:"image.png"}}),t._v("\n机器Y的执行时间是X的n倍")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("时钟周期：")]),t._v("计算机必须能够产生同步的时钟定时信号，也就是CPU的主脉冲信号，其宽度称为时钟周期")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("时钟频率：")]),t._v("CPU的"),a("font",{attrs:{color:"red"}},[t._v("主频")]),t._v("就是CPU中的主脉冲信号的时钟频率，是CPU时钟周期的倒数")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("CPI：")]),t._v("CPI表示执行一条指令所需的时钟周期数。由于不同指令的功能不同，所需的时钟周期数也不同，因此，对于一个特定指令而言，其CPI指执行该指令所需的时钟周期数，此时CPI是一个确定的值；对于一个程序或一台机器来说，其CPI指该程序或该机器指令集中的所有指令执行所需的平均时钟周期数，此时CPI是一个平均值")],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("用户CPU时间 = 程序总时钟周期数 ÷ 时钟频率 = 程序总时钟周期数 × 时钟周期")]),t._v("\n已知程序总指令条数和综合CPI，则可用如下公式计算程序总时钟周期数\n"),a("font",{attrs:{color:"red"}},[t._v("程序总时钟周期数 = 程序总指令条数 × CPI")]),t._v("\n已知程序中共有n种不同类型的指令，第i种指令的条数和CPI分别为C"),a("sub",[t._v("i")]),t._v("和CPI"),a("sub",[t._v("i")]),t._v("，则：\n$$\n程序总时钟周期数 = \\sum_{i = 1}^{n}(CPI_{i} × C_{i})\n$$\n程序的综合CPI可由如下公式求得，其中F"),a("sub",[t._v("i")]),t._v("表示第i种指令在程序中所占的比例\n$$\nCPI = \\sum_{i = 1}^{n}(CPI_{i}×F_{i}) = \\frac{程序总时钟周期数} {程序总指令条数}\n$$\n若已知程序综合CPI和总指令条数，则可使用如下公式计算用户的CPU时间\n"),a("font",{attrs:{color:"red"}},[t._v("用户CPU时间 = CPI × 程序总指令条数 × 时钟周期")])],1),t._v(" "),a("p",[a("strong",[t._v("CPU执行时间的计算")]),t._v("\n下方的（CPU时钟周期数/程序表示的是每个程序的CPU时钟周期数，指令条数/程序表示每个程序的指令条数）\n"),a("font",{attrs:{color:"red"}},[t._v("CPU执行时间 = CPU时钟周期数 / 程序 × 时钟周期")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("= CPU时钟周期数 / 程序 ÷ 时钟频率")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("= 指令条数 / 程序 × CPI")])],1),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("CPU时钟周期数 / 程序 = 指令条数 / 程序 × CPI")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("CPI = CPU时钟周期数 / 程序 ÷ 指令条数 / 程序")])],1),t._v(" "),a("blockquote",[a("p",[t._v("问题：指令的CPI、机器的CPI、程序的CPI各能反映哪方面的性能？单靠CPI不能反映CPU性能！为什么？\n例如，单周期处理器CPI = 1，但性能差！因为单周期处理器在执行指令时需要花费很长时间，而且不能同时执行多个指令。相比之下，流水线处理器的CPI可能会高一些，但它可以同时执行多个指令，因此能够提高计算机处理器的效率和性能。因此，在比较计算机处理器的性能时，需要综合考虑多个因素，而不仅仅是CPI")])]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("Example1")])],1),t._v(" "),a("blockquote",[a("p",[t._v("程序P在机器A上运行需10s，机器A的时钟频率为400MHz。现在要设计一台机器B，希望该程序在B上运行只需6s。机器B时钟频率的提高导致了其CPI的增加，使得程序P在机器B上时钟周期数是在机器A上的1.2倍。机器B的时钟频率达到A的多少倍才能使程序P在B上执行速度是A上的10/6=1.67倍？")]),t._v(" "),a("p",[t._v("答：$$CPU时间A = \\frac{时钟周期数A}{时钟频率A}$$\n$$CPU时间B = \\frac{时钟周期数B}{时钟频率B}$$\n由题：时钟周期数B = 1.2时钟周期A，CPU时间A = 10s，CPU时间B = 6s，带入解得：时钟频率B = 800MHz\n"),a("font",{attrs:{color:"red"}},[t._v("机器B的时钟频率是A的两倍，但机器B的速度并不是A的两倍！")])],1)]),t._v(" "),a("blockquote",[a("p",[t._v("例1.1 假设某个频繁使用的程序P在机器M1上运行需要10s，M1的时钟频率为2GHz。设计人员想开发一台与M1具有相同ISA的新机器M2。采用新技术可使M2的时钟频率增加，但同时也会使CPI增加。假定程序P在M2上的时钟周期数是在M1上的1.5倍，则M2的时钟频率至少要达到多少才能使程序P在M2上的运行时间缩短为6s？")]),t._v(" "),a("p",[t._v("答：$$CPU时间M_{1} = \\frac{时钟周期M_{1}}{时钟频率M_{1}}$$\n$$CPU时间M_{2} = \\frac{时钟周期M_{2}}{时钟频率M_{2}}$$\n由题：CPU时间M1 = 10s，CPU时间M2 = 6s，时钟周期M2 = 1.5时钟周期M1，时钟频率M1 = 2GHz，带入解得：时钟频率M2 = 5GHz")])]),t._v(" "),a("p",[a("strong",[t._v("选择性能评价程序")])]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"red"}},[t._v("用基准程序来评测计算机的性能")]),t._v(" "),a("ul",[a("li",[t._v("基准程序是专门用来进行性能评价的一组程序")]),t._v(" "),a("li",[t._v("最好的基准程序是用户实际使用的程序或典型的简单程序")])])],1),t._v(" "),a("li",[a("font",{attrs:{color:"red"}},[t._v("基准程序的缺陷")]),t._v(" "),a("ul",[a("li",[t._v("现象：基准程序的性能与某段短代码密切相关时，会被利用以得达到不当的性能评测结果")]),t._v(" "),a("li",[t._v("手段：硬件系统设计人员或编译器开发者针对这些代码片段进行特殊优化，使得执行这段代码的速度非常快")])])],1)]),t._v(" "),a("p",[a("strong",[t._v("Amdahl定律")])]),t._v(" "),a("ul",[a("li",[t._v("阿姆达尔定律是计算机系统设计方面重要的定量原则之一\n"),a("ul",[a("li",[t._v("基本思想：对系统中某部分（硬件或软件）进行更新所带来的系统性能改进程度，取决于该部分被使用的频率或其执行时间占总执行时间的比例。\n$$\n改进后的执行时间 = \\frac{改进部分执行时间}{改进部分的改进倍数} + 未改进部分执行时间\n$$\n或\n$$\n整体改进倍数 = \\frac{1}{\\frac{改进部分时间比例}{改进部分的改进倍数} + 未改进部分时间比例}\n$$")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("问题：若整数乘法器改进后可加快10倍，整数乘法指令在程序中占40%，则整体性能可改进多少倍？若占比达60%和90%，则整体性能分别能改进多少倍？")])]),t._v(" "),a("p",[t._v("答：假设原来的整数乘法执行的时间是 $T_{mul}$，其他部分执行的时间是 $T_{other}$。则程序的总执行时间是 $T = T_{mul} + T_{other}$。我们可以先计算占比对应的时间。由于整数乘法指令在程序中占40%，那么： $$ T_{mul} = 0.4 T, \\quad T_{other} = 0.6 T $$ 在改进后，整数乘法器加快了10倍，所以新的整数乘法执行时间是： $$ T'"),a("em",[t._v("{mul} = T")]),t._v("{mul}/10 = 0.04 T $$ 新的程序总执行时间是: $$ T' = T'"),a("em",[t._v("{mul} + T")]),t._v("{other} = 0.04T + 0.6T = 0.64T $$ 那么整体性能的改进倍数： $$ \\frac{T}{T'} = \\frac{T}{0.64T} = \\frac{1}{0.64} \\approx 1.56 $$ 当整数乘法指令的占比分别达到60%和90%时，我们可以用类似的方法进行计算。这里我们用一个通用公式表示这个过程，令$x$表示整数乘法器在程序中的占比： $$ \\frac{T}{T'} = \\frac{1}{(1-x)+\\frac{x}{10}} $$ 当整数乘法指令的占比达到60%，即 $x = 0.6$时： $$ \\frac{T}{T'} = \\frac{1}{(1-0.6)+\\frac{0.6}{10}} = \\frac{1}{0.46} \\approx 2.17 $$ 当整数乘法指令的占比达到90%，即 $x = 0.9$时： $$ \\frac{T}{T'} = \\frac{1}{(1-0.9)+\\frac{0.9}{10}} = \\frac{1}{0.19} \\approx 5.26 $$ 所以当整数乘法指令的占比分别达到60%和90%时，整体性能分别能改进2.17倍和5.26倍。")]),t._v(" "),a("blockquote",[a("p",[t._v("例：某程序在某台计算机上运行所需时间是100s，其中，80s用来执行乘法操作。要使该程序的性能是原来的5倍，若不改进其他部件而仅改进乘法部件，则乘法部件的速度应该提高到原来的多少倍？")]),t._v(" "),a("p",[t._v("答：根据公式$$p = \\frac{1}{\\frac{t}{n} + 1-t}$$知：$$5 = \\frac{1}{\\frac{0.8}{n} + 0.2}$$$$\\frac{0.8}{n} + 0.2 = \\frac{1}{5} = 0.2$$\n要使上述公式满足，必须$$\\frac{0.8}{n} = 0，即n\\to \\infty$$")])]),t._v(" "),a("h1",{attrs:{id:"第二章-数据的机器级表示与处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章-数据的机器级表示与处理"}},[t._v("#")]),t._v(" 第二章 数据的机器级表示与处理")]),t._v(" "),a("h2",{attrs:{id:"数值数据的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值数据的表示"}},[t._v("#")]),t._v(" 数值数据的表示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306102106166.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"信息的二进制编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信息的二进制编码"}},[t._v("#")]),t._v(" 信息的二进制编码")]),t._v(" "),a("ul",[a("li",[t._v("机器级数据分为两大类\n"),a("ul",[a("li",[t._v("数值数据：无符号整数、带符号整数、浮点数（实数）")]),t._v(" "),a("li",[t._v("非数值数据：逻辑数（包括位串）、西文字符和汉字")])])]),t._v(" "),a("li",[t._v("计算机内部所有信息都用二进制（即0和1）进行编码")]),t._v(" "),a("li",[t._v("用二进制编码的原因\n"),a("ul",[a("li",[t._v("制造二个稳定态的物理器件容易（电位高/低，脉冲有/无，正/负极）")]),t._v(" "),a("li",[t._v("二进制编码、计数、运算规则简单")]),t._v(" "),a("li",[t._v("正好与逻辑命题真/假对应，便于逻辑运算")]),t._v(" "),a("li",[t._v("可方便地用逻辑电路实现算术运算")])])]),t._v(" "),a("li",[t._v("真值和机器数（"),a("font",{attrs:{color:"red"}},[t._v("非常重要的概念！")]),t._v("）\n"),a("ul",[a("li",[a("font",{attrs:{color:"blue"}},[t._v("机器数：用0和1编码的计算机内部的0/1序列")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"blue"}},[t._v("真值：真正的值，即：现实中带正负号的数")])],1),t._v(" "),a("li",[t._v("例如：usigned short类型变量x的真值是127,其机器数是多少？\n127 = 2"),a("sup",[t._v("7")]),t._v("-1，其机器数为0000 0000 0001 1111")])])],1)]),t._v(" "),a("h3",{attrs:{id:"数值数据的表示-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值数据的表示-2"}},[t._v("#")]),t._v(" 数值数据的表示")]),t._v(" "),a("ul",[a("li",[t._v("数值数据表示的三要素\n"),a("ul",[a("li",[t._v("进位计数制")]),t._v(" "),a("li",[t._v("定、浮点表示")]),t._v(" "),a("li",[t._v("如何用二进制编码")]),t._v(" "),a("li",[t._v("即：要确定一个数值数据的值必须要确定这三个元素。例如：20137564的值是多少？答案是不知道！")])])]),t._v(" "),a("li",[t._v("进位计数制\n"),a("ul",[a("li",[t._v("十进制、二进制（"),a("font",{attrs:{color:"red"}},[t._v("通常后缀“B”表示二进制数，如01011010B")]),t._v("）、十六进制（"),a("font",{attrs:{color:"red"}},[t._v("后缀H或者前缀0x表示")]),t._v("）、八进制数（"),a("font",{attrs:{color:"red"}},[t._v("后缀O表示")]),t._v("）及其相互转换")],1)])]),t._v(" "),a("li",[t._v("定/浮点表示（"),a("font",{attrs:{color:"green"}},[t._v("解决")]),a("font",{attrs:{color:"red"}},[t._v("小数点")]),a("font",{attrs:{color:"green"}},[t._v("问题")]),t._v("）\n"),a("ul",[a("li",[t._v("定点整数、定点小数")]),t._v(" "),a("li",[t._v("浮点数（可用一个定点小数和一个定点整数来表示）")])])],1),t._v(" "),a("li",[t._v("定点数的编码（"),a("font",{attrs:{color:"green"}},[t._v("解决")]),a("font",{attrs:{color:"red"}},[t._v("正负号")]),a("font",{attrs:{color:"green"}},[t._v("问题")]),t._v("）\n"),a("ul",[a("li",[t._v("源码、补码、反码、移码（反码很少用）")])])],1),t._v(" "),a("li",[a("font",{attrs:{color:"red"}},[t._v("现代计算机系统多用")]),a("font",{attrs:{color:"green"}},[t._v("十六进制")]),a("font",{attrs:{color:"red"}},[t._v("表示")]),a("font",{attrs:{color:"green"}},[t._v("机器数")])],1)]),t._v(" "),a("h3",{attrs:{id:"十进制数与r进制数之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十进制数与r进制数之间的转换"}},[t._v("#")]),t._v(" 十进制数与R进制数之间的转换")]),t._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[t._v("（1）R进制数 => 十进制数")]),t._v(" "),a("font",{attrs:{color:"orange"}},[t._v("按“权”展开")]),t._v(" "),a("font",{attrs:{color:"green"}},[t._v("例1：(10101.01)"),a("sub",[t._v("2")]),t._v(" = 1×2"),a("sup",[t._v("4")]),t._v(" + 1×2"),a("sup",[t._v("2")]),t._v(" + 1×2"),a("sup",[t._v("0")]),t._v(" + 1×2"),a("sup",[t._v("-2")]),t._v(" = (21.25)"),a("sub",[t._v("10")])]),t._v(" "),a("font",{attrs:{color:"green"}},[t._v("例2：(307.6)"),a("sub",[t._v("8")]),t._v(" = 3×8"),a("sup",[t._v("2")]),t._v(" + 7×8"),a("sup",[t._v("0")]),t._v(" + 6×8"),a("sup",[t._v("-1")]),t._v(" = (199.75)"),a("sub",[t._v("10")])]),t._v(" "),a("font",{attrs:{color:"green"}},[t._v("例3：(3A.1)"),a("sub",[t._v("16")]),t._v(" = 3×16"),a("sup",[t._v("1")]),t._v(" + 10×16"),a("sup",[t._v("0")]),t._v(" + 1×16"),a("sup",[t._v("-1")]),t._v(" = (58.0625)"),a("sub",[t._v("10")])])],1),t._v(" "),a("p",[a("font",{attrs:{color:"blue"}},[t._v("（2）十进制数 => 二进制数")]),t._v(" "),a("font",{attrs:{color:"orange"}},[t._v("整数部分和小数部分分别转换")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("1. 整数——— “除基取余，上右下左”")]),t._v(" "),a("font",{attrs:{color:"red"}},[t._v("2. 小数——— “乘基取整，上左下右”")])],1),t._v(" "),a("blockquote",[a("p",[t._v("将十进制整数和小数一起转换为二进制时，需要分别处理整数部分和小数部分，然后按照顺序将它们放在一起。")]),t._v(" "),a("p",[t._v("整数部分，使用除以2法来分而治之。例如：将1转换为二进制：1 ÷ 2 商是0，余数是1，整数部分的二进制表示为1")]),t._v(" "),a("p",[t._v("小数部分，通过连续乘以2的方式将十进制小数转为二进制小数。例如：1.23中的小数部分为0.23：\n0.23 × 2 = 0.46（整数部分为0）\n0.46 × 2 = 0.92（整数部分为0）\n0.92 × 2 = 1.84（整数部分为1）\n0.84 × 2 = 1.68（整数部分为1）\n0.68 × 2 = 1.36（整数部分为1）\n可以继续此过程获得更多的二进制位。这里只显示前5位，将整数部分按顺序排列，为二进制小数0.00111。整数1和小数0.00111相结合，得到1.23的二进制表示为1.00111。")]),t._v(" "),a("p",[t._v("在将十进制小数转为二进制小数时，通过乘以2来执行转换。何时结束取决于几个因素：")]),t._v(" "),a("ol",[a("li",[t._v("期望精度：如果想要获得特定数量的二进制小数位，例如5位或10位，则可执行相应的步骤数并在此处停止")]),t._v(" "),a("li",[t._v("重复模式：在某些情况下，通过小数部分乘以2，结果中的整数部分将开始重复出现相同的模式。在这种情况下，可以得出结论，已找到无限重复的二进制小数表示。例如，十进制数0.1的二进制无线循环表示为0.0001100110011...；在看到重复的模式“0011”时，可以停止。")]),t._v(" "),a("li",[t._v("结果为0：对于某些十进制小数，通过乘以2的足够次数，结果的小数部分将变为0。这意味着已找到一个精确的二进制表示，不在需要执行任何进一步的步骤")])])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("现实中都精确值可能在机器内部无法使用0和1精确表示！\n")])]),t._v(" "),a("h3",{attrs:{id:"定点数和浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定点数和浮点数"}},[t._v("#")]),t._v(" 定点数和浮点数")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("计算机中只能通过")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("约定小数点都位置")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("来表示小数点")]),t._v(" "),a("ul",[a("li",[t._v("小数点位置约定在固定位置的数称为"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("定点数")])]),t._v(" "),a("li",[t._v("小数点位置约定为可浮动的数称为"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("浮点数")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("定点小数")]),t._v("用来表示浮点数的尾数部分")]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("定点整数")]),t._v("用来表示整数，分"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("带符号整数")]),t._v("和"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("无符号整数")])]),t._v(" "),a("li",[t._v("任何实数：X = (-1)"),a("sup",[t._v("s")]),t._v(" × M × R"),a("sup",[t._v("E")]),t._v("\n其中，S取值为0或1,用来决定数"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("X的符号；M是一个二进制定点小数")]),t._v("，称为数"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("X的尾数")]),t._v("；"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("E是一个二进制点整数")]),t._v("，称为数"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("X的阶或指数")]),t._v("；R是"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("基数")]),t._v("，可以为2、4和16等。计算机中只要表示S、M和E三个信息，就能确定X的值，这称为"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("浮点数")])])]),t._v(" "),a("h3",{attrs:{id:"原码表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原码表示"}},[t._v("#")]),t._v(" 原码表示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306152143900.png",alt:"image.png"}})]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("“正”号用0表示")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("“负号”用1表示")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("数值部分不变！")])]),t._v(" "),a("ul",[a("li",[t._v("容易理解，但是：\n"),a("ul",[a("li",[t._v("0的表示不唯一，故不利于程序员编程")]),t._v(" "),a("li",[t._v("加、减运算方式不统一")]),t._v(" "),a("li",[t._v("需额外对符号位进行处理，故不利于硬件设计")]),t._v(" "),a("li",[t._v("特别当a < b时，实现a - b比较困难\n"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("从50年代开始，整数都采用补码来表示，但浮点数的尾数用原码定点小数表示")])])])])]),t._v(" "),a("h3",{attrs:{id:"移码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移码"}},[t._v("#")]),t._v(" 移码")]),t._v(" "),a("ul",[a("li",[t._v("什么是移码表示？\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("将每一个数值加上一个偏置常数")])])])]),t._v(" "),a("li",[t._v("通常，当编码位数为"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("n")]),t._v("时，偏执常数取"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("2"),a("sup",[t._v("n-1")])]),t._v("或"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("2"),a("sup",[t._v("n-1")]),t._v("-1")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306152209634.png",alt:"image.png"}})]),t._v(" "),a("li",[t._v("为什么要用移码来表示指数（阶码）？\n"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("便于浮点数加减运算时的对阶操作（比较大小）")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306152212299.png",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"补码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补码"}},[t._v("#")]),t._v(" 补码")]),t._v(" "),a("p",[t._v("重要概念："),a("span",{staticStyle:{color:"#ff0000"}},[t._v("在一个模运算系统中，一个数与它除以“模”后的余数等价")]),t._v("\n时钟是一种模12系统     "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("现实生活中的模运算系统")])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("假定钟表时钟指向10点，要将它拨向6点，则有两种拨法：")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("①倒拨4格：10 - 4 = 6")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("②顺拨8格：10 + 8 = 18 == 6  (mod 12)")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("模12系统中：10 - 4 = 10 + 8 (mod 12)"),a("br"),t._v("-4 = 8 (mod 12)")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("则，称8是-4对12的补码")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("（即：-4的模12补码等于8）")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("同样有 -3 == 9 (mod 12)"),a("br"),t._v("-5 == 7 (mod 12)等")])]),t._v(" "),a("p",[t._v("结论1："),a("span",{staticStyle:{color:"#ff0000"}},[t._v("一个负数的补码等于模减去该负数的绝对值")]),t._v("\n结论2："),a("span",{staticStyle:{color:"#ff0000"}},[t._v("对于某一确定的模，某数减去小于模的另一数，总可以用该数加上另一数负数的补码来代替")])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("补码（mod运算）：实现了+和-的统一")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306152247476.png",alt:"image.png"}})]),t._v(" "),a("p",[a("mark",{staticStyle:{background:"#FF5582A6"}},[t._v("计算机中的运算器是模运算系统")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("8位二进制加法模运算系统")])]),t._v(" "),a("blockquote",[a("p",[t._v("计算 0111 1111 - 0100 0000 = ？\n[-0100 0000]"),a("sub",[t._v("补")]),t._v(" = 1100 0000\n0111 1111 - 0100 0000 = 0111 1111 + [-0100 0000]"),a("sub",[t._v("补")]),t._v("\n= 0111 1111 + 1100 0000 = 0011 1111")])]),t._v(" "),a("ul",[a("li",[t._v("结论1："),a("span",{staticStyle:{color:"#ff0000"}},[t._v("一个负数的补码等于对应正数补码的“各位取反，末位加1”")])])]),t._v(" "),a("blockquote",[a("p",[t._v("在一个4位的运算器中，最高位是符号位，表示正数或负数。当最高位为0时，表示一个正数；当最高位为1时，表示一个负数。")])]),t._v(" "),a("p",[t._v("对于正数的表示，可以使用0到7这8个非负整数。因为最高位为0，所以可以得到以下数值：\n0000 -> 0\n0001 -> 1\n0010 -> 2\n0011 -> 3\n0100 -> 4\n0101 -> 5\n0110 -> 6\n0111 -> 7\n对于负数的表示，可以使用8到15这8个整数，但在二进制补码表示中，负数的真值是通过将其对应正数的补码取反加1来获得。因此，负数的表示如下：\n1000 -> -8\n1001 -> -7\n1010 -> -6\n1011 -> -5\n1100 -> -4\n1101 -> -3\n1110 -> -2\n1111 -> -1\n因此，对于一个4位的运算器，真值范围为-8到7。")]),t._v(" "),a("p",[t._v("补码的定义    假定补码有n位，则：\n"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("[X]"),a("sub",[t._v("补")]),t._v(" = 2"),a("sup",[t._v("n")]),t._v(" + X  (-2"),a("sup",[t._v("n")]),t._v(" <= X <= 2"),a("sup",[t._v("n")]),t._v("，mod 2"),a("sup",[t._v("n")]),t._v(")")]),t._v("\nX是真值，[X]"),a("sub",[t._v("补")]),t._v("是机器数")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306161441740.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"求特殊数的补码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求特殊数的补码"}},[t._v("#")]),t._v(" 求特殊数的补码")]),t._v(" "),a("p",[t._v("假定机器数有n位\n"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("①[-2"),a("sup",[t._v("n-1")]),t._v("]"),a("sub",[t._v("补")]),t._v(" = 2"),a("sup",[t._v("n")]),t._v(" - 2"),a("sup",[t._v("n-1")]),t._v(" = 10...0（n - 1个0）    (mod 2"),a("sup",[t._v("n")]),t._v(")")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("②[-1]"),a("sub",[t._v("补")]),t._v(" = 2"),a("sup",[t._v("n")]),t._v(" - 0...01 = 11...1（n个1）  (mod 2"),a("sup",[t._v("n")]),t._v(")")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("③[+0]"),a("sub",[t._v("补")]),t._v(" = [-0]"),a("sub",[t._v("补")]),t._v(" = 00...0（n个0）")])]),t._v(" "),a("p",[t._v("32位机器中，int、short、char型数据机器数各占"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("32位、16位、8位")])]),t._v(" "),a("h4",{attrs:{id:"补码与真值之间的简便转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补码与真值之间的简便转换"}},[t._v("#")]),t._v(" 补码与真值之间的简便转换")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("注：正数的补码是其本身，负数的补码是其对应正数补码的“各位取反，末位加一”")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/202306161512796.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"求补码的真值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求补码的真值"}},[t._v("#")]),t._v(" 求补码的真值")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161534911.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"无符号整数和带符号整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无符号整数和带符号整数"}},[t._v("#")]),t._v(" 无符号整数和带符号整数")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("整数类型分：无符号整数和带符号整数")])]),t._v(" "),a("h4",{attrs:{id:"无符号整数-unsigned-integer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无符号整数-unsigned-integer"}},[t._v("#")]),t._v(" 无符号整数（Unsigned integer）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161541291.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("一般来说，计算机中采用高到低位从左到右的方式")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161545360.png",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[t._v("无符号整数的编码中"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("没有符号位")])]),t._v(" "),a("li",[t._v("能表示的最大值大于位数相同的带符号整数的最大值（Why？）\n"),a("ul",[a("li",[t._v("例如：8位无符号整数最大是255（1111 1111），而带符号整数最大是127（0111 1111）")])])]),t._v(" "),a("li",[t._v("总是整数，所以很多时候就"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("简称为“无符号数”")])])]),t._v(" "),a("h4",{attrs:{id:"带符号整数-定点整数-signed-integer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#带符号整数-定点整数-signed-integer"}},[t._v("#")]),t._v(" 带符号整数，定点整数（Signed integer）")]),t._v(" "),a("ul",[a("li",[t._v("计算机必须能处理正数和负数，MSB表示数符")]),t._v(" "),a("li",[t._v("有三种定点编码方式\n"),a("ul",[a("li",[t._v("原码\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("现用来表示浮点（实）数的尾数")])])])]),t._v(" "),a("li",[t._v("反码\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("现已不用于表示数值数据")])])])]),t._v(" "),a("li",[t._v("补码\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("50年代以来，所有计算机都用补码表示定点整数")])])])])])]),t._v(" "),a("li",[t._v("为什么用补码表示带符号整数？\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("补码运算系统是模运算系统，加、减运算统一")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("数0的表示唯一，方便使用")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("比原码和反码多表示一个最小负数")])])])])]),t._v(" "),a("h4",{attrs:{id:"c语言程序中的整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言程序中的整数"}},[t._v("#")]),t._v(" C语言程序中的整数")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161612377.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("C语言标准规定：若运算中同时有无符号和带符号整数，则按无符号整数运算")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161619024.png",alt:"image.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161623360.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161636815.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[t._v("#")]),t._v(" 浮点数")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("实数类型分：单精度浮点、浮点双精度和扩展精度浮点")])]),t._v(" "),a("h4",{attrs:{id:"科学计数法与浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#科学计数法与浮点数"}},[t._v("#")]),t._v(" 科学计数法与浮点数")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306161659543.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"浮点数表示范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数表示范围"}},[t._v("#")]),t._v(" 浮点数表示范围")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617103426.png",alt:"image.png"}}),t._v("\n最大正数：0.11...1 × 2"),a("sup",[t._v("11...1")]),t._v(" = (1 - 2"),a("sup",[t._v("-24")]),t._v(") × 2"),a("sup",[t._v("127")]),t._v("\n最小正数：0.10...0 × 2"),a("sup",[t._v("00...0")]),t._v(" = (1/2) × 2"),a("sup",[t._v("-128")]),t._v("\n偏执常数128 + x = 11...1(255)  x = 127\n偏执常数128 + x = 00...0(0)  x = -128")]),t._v(" "),a("p",[t._v("因为原码是对称的，所以其表示范围关于原点对称\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617104407.png",alt:"image.png"}}),t._v("\n机器0：位数为0 或 落在下溢区中的数\n浮点数范围比定点数大，但数的个数没变多，故数之间更稀疏，且不均匀")]),t._v(" "),a("h4",{attrs:{id:"ieee-754标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ieee-754标准"}},[t._v("#")]),t._v(" IEEE 754标准")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617110515.png",alt:"image.png"}}),t._v("\n偏执常数127 + x = 0000 0001(1)   x = -126\n偏执常数127 + x = 1111 1110(254)  x = 127\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617110324.png",alt:"image.png"}}),t._v("\nSP(单精度浮点型)：(-1)"),a("sup",[t._v("符号位")]),t._v(" × (1 + 尾数) × 2"),a("sup",[t._v("(阶码 - 偏执常数(127))")]),t._v("\nDP(双精度浮点型)：(-1)"),a("sup",[t._v("符号位")]),t._v(" × (1 + 尾数) × 2"),a("sup",[t._v("(阶码 - 偏执常数(1023))")])]),t._v(" "),a("h4",{attrs:{id:"举例-机器数转换为真值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例-机器数转换为真值"}},[t._v("#")]),t._v(" 举例：机器数转换为真值")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617112616.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"举例-真值转换为机器数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例-真值转换为机器数"}},[t._v("#")]),t._v(" 举例：真值转换为机器数")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617113044.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"_0机器数表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0机器数表示"}},[t._v("#")]),t._v(" 0机器数表示")]),t._v(" "),a("p",[t._v("阶码：全0\n尾数：全0")]),t._v(" "),a("p",[t._v("+0: 0 00000000 00000000000000000000000\n-0: 1 00000000 00000000000000000000000")]),t._v(" "),a("h4",{attrs:{id:"∞-∞的机器数表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#∞-∞的机器数表示"}},[t._v("#")]),t._v(" +∞/-∞的机器数表示")]),t._v(" "),a("p",[t._v("浮点数除0的结果是+∞/-∞，不是溢出异常。（整数除0为异常）\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617204551.png",alt:"image.png"}}),t._v("\n阶码：全1(11111111B = 255)\n尾数：全0\n+∞ = 0 11111111 00000000000000000000000\n-∞ = 1 11111111 00000000000000000000000")]),t._v(" "),a("p",[t._v("相关操作：\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617204747.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"非数-的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非数-的表示"}},[t._v("#")]),t._v(" “非数”的表示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617205240.png",alt:"image.png"}}),t._v("\n阶码：全1(11111111B = 255)\n尾数：非0\nNaNS可以帮助调试程序\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617205517.png",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"非规格化数的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非规格化数的表示"}},[t._v("#")]),t._v(" 非规格化数的表示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617210713.png",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"第一讲小节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一讲小节"}},[t._v("#")]),t._v(" 第一讲小节")]),t._v(" "),a("ul",[a("li",[t._v("在机器内部编码后的数称为机器数，其值称为真值")]),t._v(" "),a("li",[t._v("定义数值的三个要素：进制、定点/浮点、编码")]),t._v(" "),a("li",[t._v("整数的表示\n"),a("ul",[a("li",[t._v("无符号数：正整数，用来表示地址等")]),t._v(" "),a("li",[t._v("带符号数：用补码表示")])])]),t._v(" "),a("li",[t._v("C语言中的整数：\n"),a("ul",[a("li",[t._v("无符号数：unsigned int(short/long)")]),t._v(" "),a("li",[t._v("带符号数：int(short/long)")])])]),t._v(" "),a("li",[t._v("浮点数的表示\n"),a("ul",[a("li",[t._v("符号")]),t._v(" "),a("li",[t._v("尾数：定点小数")]),t._v(" "),a("li",[t._v("指数（阶）：定点整数（基不用表示）")])])]),t._v(" "),a("li",[t._v("浮点数的范围：\n"),a("ul",[a("li",[t._v("正上溢")]),t._v(" "),a("li",[t._v("正下溢")]),t._v(" "),a("li",[t._v("负上溢")]),t._v(" "),a("li",[t._v("负下溢")]),t._v(" "),a("li",[t._v("与阶码的位数和基的大小有关")])])]),t._v(" "),a("li",[t._v("浮点数的精度：与尾数的尾数和是否规格化有关")]),t._v(" "),a("li",[t._v("浮点数的表示（IEEE 754标准）：单精度SP(float)和双精度DP(double)\n"),a("ul",[a("li",[t._v("规格化数(SP)：阶码1~254，尾数最高位隐含1")]),t._v(" "),a("li",[t._v("“零”（阶码全0，尾数全0）")]),t._v(" "),a("li",[t._v("∞（阶码全1，尾数全0）")]),t._v(" "),a("li",[t._v("NaN（阶码全1，尾数非0）")]),t._v(" "),a("li",[t._v("非规格化数（阶码全0，尾数非0，隐含位为0）")])])]),t._v(" "),a("li",[t._v("十进制数的表示：用ASCII码或BCD码表示")])]),t._v(" "),a("h2",{attrs:{id:"非数值数据的表示、数据的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非数值数据的表示、数据的存储"}},[t._v("#")]),t._v(" 非数值数据的表示、数据的存储")]),t._v(" "),a("h3",{attrs:{id:"数据的基本宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的基本宽度"}},[t._v("#")]),t._v(" 数据的基本宽度")]),t._v(" "),a("ul",[a("li",[t._v("比特（bit）是计算机中处理、存储、传输信息的最小单位")]),t._v(" "),a("li",[t._v("二进制信息最基本的计量单位是“字节”（Byte），也称“位组”\n"),a("ul",[a("li",[t._v("现代计算机中，存储器按字节编址")]),t._v(" "),a("li",[t._v("字节是最小可寻址单位")]),t._v(" "),a("li",[t._v("如果以字节为一个排列单位，则LSB表示最低有效字节，MSB表示最高有效字节")])])]),t._v(" "),a("li",[t._v("除比特和字节外，还经常考虑使用“字”作为单位")]),t._v(" "),a("li",[t._v("“字”和“字长”的概念不同\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617214448.png",alt:"image.png"}})])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617214659.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"数据量的度量单位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据量的度量单位"}},[t._v("#")]),t._v(" 数据量的度量单位")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617214941.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"程序中数据类型的宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序中数据类型的宽度"}},[t._v("#")]),t._v(" 程序中数据类型的宽度")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617215227.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"数据的存储和排列顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的存储和排列顺序"}},[t._v("#")]),t._v(" 数据的存储和排列顺序")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617231452.png",alt:"image.png"}}),t._v("\n小端：低位放低地址，高位放高地址\n大端：高位放低地址，低位放高地址")]),t._v(" "),a("h3",{attrs:{id:"大端-小端方式举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大端-小端方式举例"}},[t._v("#")]),t._v(" 大端/小端方式举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617232231.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617233937.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"字节交换问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节交换问题"}},[t._v("#")]),t._v(" 字节交换问题")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617234604.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"c表达式类型转换顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c表达式类型转换顺序"}},[t._v("#")]),t._v(" C表达式类型转换顺序")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230617235309.png",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"第二讲小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二讲小结"}},[t._v("#")]),t._v(" 第二讲小结")]),t._v(" "),a("ul",[a("li",[t._v("数据的宽度\n"),a("ul",[a("li",[t._v("位、字节、字（不一定等于字节）")]),t._v(" "),a("li",[t._v("k / K / M / G / T / P / E / Z / Y 有不同的含义")])])]),t._v(" "),a("li",[t._v("数据的存储排列\n"),a("ul",[a("li",[t._v("数据的地址：连续若干单元中最小的地址，即：从小地址开始存放数据")]),t._v(" "),a("li",[t._v("大端方式：用MSB存放的地址表示数据地址")]),t._v(" "),a("li",[t._v("小端方式：用LSB存放的地址表示数据地址")]),t._v(" "),a("li",[t._v("按边界对齐可减少访存次数")])])])]),t._v(" "),a("h2",{attrs:{id:"数据的运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的运算"}},[t._v("#")]),t._v(" 数据的运算")]),t._v(" "),a("h3",{attrs:{id:"c语言程序中涉及的运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言程序中涉及的运算"}},[t._v("#")]),t._v(" C语言程序中涉及的运算")]),t._v(" "),a("ul",[a("li",[t._v("算术运算（最基本的运算）\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("无符号数、带符号数、浮点数的+、-、*、/运算等")])])])]),t._v(" "),a("li",[t._v("按位运算\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("用途")]),t._v(" "),a("ul",[a("li",[t._v("对位串实现“掩码”操作或相应的其他处理（主要用于对多媒体数据或状态/控制信息进行处理）")])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("操作")]),t._v(" "),a("ul",[a("li",[t._v("按位或：“|”")]),t._v(" "),a("li",[t._v("按位与：“&”")]),t._v(" "),a("li",[t._v("按位取反：“~”")]),t._v(" "),a("li",[t._v("按位异或：“^”")])])])])]),t._v(" "),a("li",[t._v("逻辑运算\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("用途")]),t._v(" "),a("ul",[a("li",[t._v("用于关系表达式的运算")])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("操作")]),t._v(" "),a("ul",[a("li",[t._v("“||”表示“OR”运算")]),t._v(" "),a("li",[t._v("“&&”表示“AND”运算")]),t._v(" "),a("li",[t._v("“!”表示“NOT”运算")])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("与按位运算的差别")]),t._v(" "),a("ul",[a("li",[t._v("符号表示不同：&对&&；|对||")]),t._v(" "),a("li",[t._v("运算过程不同：按位对整体")]),t._v(" "),a("li",[t._v("结果类型不同：位串对逻辑值")])])])])]),t._v(" "),a("li",[t._v("移位运算\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("用途")]),t._v(" "),a("ul",[a("li",[t._v("提取部分信息")]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("扩大或缩小数值的2、4、8...倍")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("操作")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("左移：x << k；右移：x >> k")])]),t._v(" "),a("li",[t._v("C语言中不区分是逻辑还是算术位移，编译器"),a("span",{staticStyle:{color:"#01460f"}},[t._v("根据x的类型确定")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("无符号数：逻辑左移、逻辑右移")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("高（低）位移出，低（高）位补0，可能溢出！")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230618105431.png",alt:"image.png"}})])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("带符号数：算术左移、算术右移")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("左移：高位移除，低位补0。可能溢出！")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#fa7900"}},[t._v("溢出判断：若移除的位不等于新的符号位，则溢出")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("右移：低位移除，高位补符，可能发生有效数据丢失")])])])])])])])]),t._v(" "),a("li",[t._v("位扩展和位截断运算\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("用途")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("类型转换时可能需要数据扩展或截断")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("操作")]),t._v(" "),a("ul",[a("li",[t._v("C语言中没有专门操作运算符，编译器"),a("span",{staticStyle:{color:"#01460f"}},[t._v("根据类型转换前后数据的长短，确定是扩展还是截断")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("扩展：长转短")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("无符号数：0扩展，前面补0")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("带符号整数：符号扩展，前面补符")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("截断：长转短")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("强行将高位丢弃，故可能发生“溢出”")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230618110322.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230618110515.png",alt:"image.png"}})])])])])])])])]),t._v(" "),a("h3",{attrs:{id:"n位整数加-减运算器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n位整数加-减运算器"}},[t._v("#")]),t._v(" n位整数加/减运算器")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181330549.png",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[t._v("补码加减运算公式\n"),a("span",{staticStyle:{color:"#1100fa"}},[t._v("[A + B]"),a("sub",[t._v("补")]),t._v(" = [A]"),a("sub",[t._v("补")]),t._v(" + [B]"),a("sub",[t._v("补")]),t._v("   (mod 2"),a("sup",[t._v("n")]),t._v(")")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("[A - B]"),a("sub",[t._v("补")]),t._v(" = [A]"),a("sub",[t._v("补")]),t._v(" + [-B]"),a("sub",[t._v("补")]),t._v("   (mod 2"),a("sup",[t._v("n")]),t._v(")")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181335185.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181336033.png",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"算术逻辑部件alu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术逻辑部件alu"}},[t._v("#")]),t._v(" 算术逻辑部件ALU")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181339693.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"所有运算电路的核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有运算电路的核心"}},[t._v("#")]),t._v(" 所有运算电路的核心")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("重要认识1：")]),a("span",{staticStyle:{color:"#01460f"}},[t._v("计算机中所有算术运算都基于加法器实现！")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("重要认识2：")]),a("span",{staticStyle:{color:"#01460f"}},[t._v("加法器不知道所运算的是带符号数还是无符号数")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("重要认识3：")]),a("span",{staticStyle:{color:"#01460f"}},[t._v("加法器不判断对错，总是取低n位作为结果，并生成标志信息")])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("当Sub为1时，做减法")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("当Sub为0时，做加法")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181450223.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"条件标志位-条件码cc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件标志位-条件码cc"}},[t._v("#")]),t._v(" 条件标志位（条件码CC）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181459343.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("OF：若A与B'同号但与Sum不同号，则为1；否则为0")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("ZF：若Sum为0，则为1，否则为0")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("SF：Sum符号")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("CF：Cout⊕sub")])]),t._v(" "),a("ul",[a("li",[t._v("零标志ZF、溢出标志OF，进/借位标志CF、符号标志SF称为条件标志")]),t._v(" "),a("li",[t._v("条件标志在运算电路中产生，被记录到专门的寄存器中")]),t._v(" "),a("li",[t._v("存放标志的寄存器通常称为"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("程序/状态字寄存器或标志寄存器")]),t._v("。每个标志对应标志寄存器的一个标志位。")])]),t._v(" "),a("h3",{attrs:{id:"n位带标志加法器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n位带标志加法器"}},[t._v("#")]),t._v(" n位带标志加法器")]),t._v(" "),a("ul",[a("li",[t._v("n位加法器无法用于两个n位"),a("span",{staticStyle:{color:"#1100fa"}},[t._v("带符号整数")]),t._v("（补码）相加，无法"),a("span",{staticStyle:{color:"#1100fa"}},[t._v("判断是否溢出")])]),t._v(" "),a("li",[t._v("程序中经常需要比较大小，通过（在加法器中）做减法得到的标志信息来判断\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181536390.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("溢出标志OF：C"),a("sub",[t._v("n")]),t._v("⊕C"),a("sub",[t._v("n-1")])]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("符号标志SF：SF = F"),a("sub",[t._v("n-1")])]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("零标志ZF = 1当且仅当F = 0")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("进位/借位标志CF：CF = Cout⊕Sub")]),t._v("\nCout表示上一位的进位")])]),t._v(" "),a("h3",{attrs:{id:"整数加法举例-判溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数加法举例-判溢出"}},[t._v("#")]),t._v(" 整数加法举例：判溢出")]),t._v(" "),a("p",[t._v("做加法时，主要判断是否溢出\n"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("无符号加溢出条件：CF = 1")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("带符号加溢出条件：OF = 1")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181559109.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#01460f"}},[t._v("两个正数相加，结果为负数，故溢出！即OF = 1")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("溢出标志OF = 1、零标志ZF = 0、符号标志SF = 1、进位标志CF = 0")]),t._v("\n无符号：sum = 153，因为CF = 0，故未发生溢出，结果正确！\n带符号：sum = -103，因为OF = 1，故发生溢出，结果错误！")]),t._v(" "),a("h3",{attrs:{id:"整数减法举例-判大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数减法举例-判大小"}},[t._v("#")]),t._v(" 整数减法举例：判大小")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181609600.png",alt:"image.png"}}),t._v("\n带符号溢出：")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("最高位和次高位进位不同")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("和的符号位和加数的符号位不同")])])]),t._v(" "),a("p",[t._v("无符号减溢出：")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("差位负数，即借位CF=1")])])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#01460f"}},[t._v("做减法以比较大小，规则：")])]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("无符号：CF = 0时，大于")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("有符号：OF = SF时，大于")])])]),t._v(" "),a("h3",{attrs:{id:"整数减法举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数减法举例"}},[t._v("#")]),t._v(" 整数减法举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181619006.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"整数加法举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数加法举例"}},[t._v("#")]),t._v(" 整数加法举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181623057.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"ieee-754-标准规定的五种异常情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ieee-754-标准规定的五种异常情况"}},[t._v("#")]),t._v(" IEEE 754 标准规定的五种异常情况")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181640584.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"浮点数加-减运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数加-减运算"}},[t._v("#")]),t._v(" 浮点数加/减运算")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181646698.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"浮点数加减法基本要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数加减法基本要点"}},[t._v("#")]),t._v(" 浮点数加减法基本要点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181651664.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"浮点数加法运算举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数加法运算举例"}},[t._v("#")]),t._v(" 浮点数加法运算举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181658517.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"附加位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附加位"}},[t._v("#")]),t._v(" 附加位")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181701775.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"ieee-754的舍入方式的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ieee-754的舍入方式的说明"}},[t._v("#")]),t._v(" IEEE 754的舍入方式的说明")]),t._v(" "),a("p",[t._v("IEEE 754的舍入方式\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181706203.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("（Z1和Z2分别是结果Z的最接近的可表示的左、右两个数）")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("（1）就近舍入：")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("舍入为最近可表示的数")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("非中间值：0舍1入")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("中间值：强迫结果为偶数")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181709509.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181710923.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("（2）朝+∞方向舍入：")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("舍入为Z2（正向舍入）")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("（3）朝﹣∞方向舍入：")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("舍入为Z1（负向舍入）")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("（4）朝0方向舍入：")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("截去。正数：取Z1；负数：取Z2")])]),t._v(" "),a("h3",{attrs:{id:"c语言中的浮点数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言中的浮点数类型"}},[t._v("#")]),t._v(" C语言中的浮点数类型")]),t._v(" "),a("ul",[a("li",[t._v("long double类型的长度和格式随编译器和处理器类型的不同而有所不同，IA-32中是80位扩展精度格式")]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("从int转换为float时，不会发生溢出，但可能有数据被舍入")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("从int或float转换为double时，因为double的有效位数更多，故能保留精确值")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("从float或double转换为int时，因为int没有小数部分，所以数据可能会向0方向被截断")])])]),t._v(" "),a("h3",{attrs:{id:"浮点数比较运算举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数比较运算举例"}},[t._v("#")]),t._v(" 浮点数比较运算举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181736332.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"ieee-754的范围和精度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ieee-754的范围和精度"}},[t._v("#")]),t._v(" IEEE 754的范围和精度")]),t._v(" "),a("ul",[a("li",[t._v("单精度浮点数（float型）的表示范围多大？\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("最大的数据：+1.11...1 × 2"),a("sup",[t._v("127")]),t._v("  约+3.4 × 10"),a("sup",[t._v("38")])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("双精度浮点数（double型）  约+1.8 × 10"),a("sup",[t._v("308")])]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306181958982.png",alt:"image.png"}})])])])]),t._v(" "),a("h1",{attrs:{id:"第三章-程序的转换与机器级表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章-程序的转换与机器级表示"}},[t._v("#")]),t._v(" 第三章 程序的转换与机器级表示")]),t._v(" "),a("h2",{attrs:{id:"程序转换概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序转换概述"}},[t._v("#")]),t._v(" 程序转换概述")]),t._v(" "),a("h3",{attrs:{id:"机器级指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器级指令"}},[t._v("#")]),t._v(" 机器级指令")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("机器指令")]),t._v("和"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("汇编指令")]),t._v("一一对应，都是机器级指令")]),t._v(" "),a("li",[t._v("机器指令是一个0/1序列，由若干"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("字段")]),t._v("组成\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182019590.png",alt:"image.png"}})]),t._v(" "),a("li",[t._v("汇编指令是机器指令的符号表示（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("可有不同的格式")]),t._v("）\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182020046.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("mov、movb、bx、%bx等都是")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("助记符")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182023296.png",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"ia-32支持的数据类型及格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32支持的数据类型及格式"}},[t._v("#")]),t._v(" IA-32支持的数据类型及格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182052361.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"高级语言转换为机器代码的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级语言转换为机器代码的过程"}},[t._v("#")]),t._v(" 高级语言转换为机器代码的过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182102725.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("预处理：")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("在高级语言源程序中插入所有用#include命令指定的文件和#define声明指定的宏")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("编译：")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("将预处理后的源程序文件编译生成相应的汇编语言程序")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("汇编：")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("由汇编程序将汇编语言源程序文件转换为可重定位的机器语言目标代码文件")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("链接：")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("由链接器将多个可重定位的机器语言目标文件以及库例程（如printf()库函数）链接起来，生成最终的可执行目标文件")])]),t._v(" "),a("h3",{attrs:{id:"ia-32的定点寄存器组织"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32的定点寄存器组织"}},[t._v("#")]),t._v(" IA-32的定点寄存器组织")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182109352.png",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("8个通用寄存器")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("两个专用寄存器")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("6个段寄存器")])])]),t._v(" "),a("h3",{attrs:{id:"ia-32的寻址方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32的寻址方式"}},[t._v("#")]),t._v(" IA-32的寻址方式")]),t._v(" "),a("ul",[a("li",[t._v("寻址方式\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("如何根据指令给定信息得到操作数或操作数地址")])])])]),t._v(" "),a("li",[t._v("操作数所在的位置\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("指令中：立即寻址")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("寄存器中：寄存器寻址")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("存储单元中（属于存储器操作数，按字节编址）：其他寻址方式")])])])]),t._v(" "),a("li",[t._v("存储器操作数的寻址方式和微处理器的工作模式有关\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("两种工作模式：实地址模式和保护模式")])])])]),t._v(" "),a("li",[t._v("保护模式\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("加电后进入，采用虚拟存储管理，多任务情况下隔离、保护")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("80286以上微处理器的工作模式")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("寻址空间为2"),a("sup",[t._v("32")]),t._v("B，32位线性地址分段")]),a("span",{staticStyle:{color:"#01460f"}},[t._v("（段基址 + 段内偏移量）")])])])])]),t._v(" "),a("h3",{attrs:{id:"保护模式下的寻址方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保护模式下的寻址方式"}},[t._v("#")]),t._v(" 保护模式下的寻址方式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182233986.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"存储器操作数的寻址方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储器操作数的寻址方式"}},[t._v("#")]),t._v(" 存储器操作数的寻址方式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306182244559.png",alt:"image.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230619094213.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("504 + %ebp + 2 × %esi")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("以字节编址，低对低，高对高，以低地址示数字对齐")])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("IA-32是典型的CISC（复杂指令集计算机）风格ISA\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("8个通用寄存器（8位，16位，32位）")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("2个专用寄存器：EIP（PC）、标志寄存器EFLAGS")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("6个段寄存器（间接给出段基址）")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("存储器地址空间位4GB，按字节编址，小端方式")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("寻址方式")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("立即、寄存器、存储器（SR:[B] + [I]×s + A）（段基址(SR) + 有效地址(偏移量)）")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("相对寻址")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("变长指令字、变成操作码")])])])]),t._v(" "),a("li",[t._v("汇编语言格式\n"),a("ul",[a("li",[t._v("Intel格式汇编")]),t._v(" "),a("li",[t._v("AT&T格式汇编")])])])]),t._v(" "),a("h2",{attrs:{id:"ia-32指令系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32指令系统"}},[t._v("#")]),t._v(" IA-32指令系统")]),t._v(" "),a("h3",{attrs:{id:"ia-32常用指令类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32常用指令类型"}},[t._v("#")]),t._v(" IA-32常用指令类型")]),t._v(" "),a("ul",[a("li",[t._v("传送指令\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("通用数据传送指令")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("MOV：一般传送，包括movb、movw和movl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("MOVS：符号扩展传送，如movsbw、movswl")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("MOVZ：零扩展传送，如movzwl、movzbl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("XCHG：数据交换")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("PUSH/POP：入栈/出栈，如pushl，pushw，popl，popw等")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("地址传送指令")]),t._v(" "),a("ul",[a("li",[t._v('LEA：加载有效地址，如"leal(%edx, %eax), %eax"的功能为R[eax]<--R[edx] + R[eax]，执行前，若R[edx] = i，R[eax] = j，则指令执行后，R[eax] = i + j')])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("输入输出指令")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("IN和OUT：I/O端口与寄存器之间的交换")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("标志传送指令")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("PUSHF、POPF：将EFLAG压栈，或将栈顶内容送EFLAG")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"入栈-pushw-ax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入栈-pushw-ax"}},[t._v("#")]),t._v(" “入栈”（pushw %ax）")]),t._v(" "),a("ul",[a("li",[t._v("栈（Stack）是一种采用"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("“先进后出”")]),t._v("方式进行访问的一块存储区，用于"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("嵌套过程调用")]),t._v("。"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("从高地址向低地址增长")])]),t._v(" "),a("li",[t._v("“栈”不等于"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("“堆栈”")]),t._v("（堆栈由“堆”和“栈”组成）\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230619105925.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("AL存储低位，AH存储高位，由于栈是由高地址向低地址增长，又是小端方式，故AL在栈顶，AH在栈底")])])]),t._v(" "),a("h3",{attrs:{id:"出栈-popw-ax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出栈-popw-ax"}},[t._v("#")]),t._v(" “出栈”（popw %ax）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230619110211.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"ia-32常用指令类型-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32常用指令类型-2"}},[t._v("#")]),t._v(" IA-32常用指令类型")]),t._v(" "),a("ul",[a("li",[t._v("定点算术运算指令\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("加/减运算（影响标志、不区分无/带符号）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("ADD：加，包括addb、addw、addl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("SUB：减，包括subb、subw、subl等")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("增1/减1运算（影响除CF以外的标志，不区分无/带符号）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("INC：加，包括incb、incw、incl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("DEC：减，包括decb、decw、decl等")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("取负运算（影响标志、若对0取负，则结果为0且CF = 0，否则CF = 1）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("NEG：取负，包括negb、negw、negl等")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("比较运算（做减法得到标志、不区分无/带符号）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("CMP：比较，包括cpmb、cmpw、cmpl等")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("乘/除运算（区分无/带符号）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("MUL/IMUL：无符号乘/带符号乘（影响标志OF和CF）")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("DIV/IDIV：无符号除/带符号除")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"ia-32常用指令类型-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32常用指令类型-3"}},[t._v("#")]),t._v(" IA-32常用指令类型")]),t._v(" "),a("ul",[a("li",[t._v("按位运算指令\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("逻辑运算（仅NOT不影响标志，其他指令OF = CF = 0，而ZF和SF根据结果设置：若全0，则ZF = 1；若最高位为1，则SF = 1）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("NOT：非包括notb、notw、notl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("AND：与，包括andb、andw、andl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("OR：或，包括orb、orw、orl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("XOR：异或，包括xorb、xorw、xorl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("TEST：做“与”操作测试，仅影响标志")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("移位运算（左/右移时，最高/最低位送CF）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("SHL/SHR：逻辑左/右移，包括shlb、shrw、shrl等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("SAL/SAR：算术左/右移，")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("左移判溢出，")]),a("span",{staticStyle:{color:"#01460f"}},[t._v("右移高位补符")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("（移位前、后符号位发生变化，则OF=1）")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("ROL/ROR：循环左/右移，包括rolb、rorw、roll等")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("RCL/RCR：带进位循环左/右移，将CF作为操作数一部分循环位移")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"ia-32常用指令类型-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ia-32常用指令类型-4"}},[t._v("#")]),t._v(" IA-32常用指令类型")]),t._v(" "),a("ul",[a("li",[t._v("控制转移指令\n"),a("ul",[a("li",[t._v("指令执行可"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("按顺序")]),t._v("或"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("跳转到目标指令处")]),t._v("执行")]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("无条件转移指令")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("JMP DST：无条件转移到目标指令DST处执行")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("条件转移指令")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("Jcc DST：cc为条件码，根据标志（条件码）判断是否满足条件，若满足，则转移到目标指令DST处执行，否则按顺序执行")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("条件设置")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("SETcc DST：将条件码cc保存到DST（通常是一个8位寄存器）")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("调用和返回指令（用于过程调用）")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("CALL DST：返回地址RA入栈，转DST处执行")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("RET：从栈中取出返回地址RA，转到RA处执行")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("中断指令")])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191430932.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"程序的机器级表示与执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序的机器级表示与执行"}},[t._v("#")]),t._v(" 程序的机器级表示与执行")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191444455.png",alt:"image.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191446945.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"例子-c表达式类型转换顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子-c表达式类型转换顺序"}},[t._v("#")]),t._v(" 例子：C表达式类型转换顺序")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191449901.png",alt:"image.png"}})]),t._v(" "),a("h2",{attrs:{id:"c语言程序的机器级表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c语言程序的机器级表示"}},[t._v("#")]),t._v(" C语言程序的机器级表示")]),t._v(" "),a("h3",{attrs:{id:"过程调用的机器级表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用的机器级表示"}},[t._v("#")]),t._v(" 过程调用的机器级表示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191506581.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"过程调用的机器级表示-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用的机器级表示-2"}},[t._v("#")]),t._v(" 过程调用的机器级表示")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191509182.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"过程调用的机器级表示-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用的机器级表示-3"}},[t._v("#")]),t._v(" 过程调用的机器级表示")]),t._v(" "),a("ul",[a("li",[t._v("IA-32的寄存器使用约定\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("调用者P保存寄存器：EAX、EDX、ECX")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("Q可直接使用这三个寄存器")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("若P在从Q返回后还要用的话，P应在转到Q前先保存，并在从Q返回后先恢复它们的值再使用")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("被调用者Q保存寄存器：EBX、ESI、EDI")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("Q必须先将它们的值保存到栈中再使用它们，并在返回P之前恢复它们的值")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("EBP和ESP分别是")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("帧指针寄存器")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("和")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("栈指针寄存器")]),t._v("，"),a("span",{staticStyle:{color:"#1100fa"}},[t._v("分别用来指向")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("当前栈帧")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("的底部和顶部")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("问题：为减少准备和结束阶段的开销，每个过程应先使用哪些寄存器？")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("EAX、ECX、EDX！\n")])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191530358.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"一个简单的过程调用例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个简单的过程调用例子"}},[t._v("#")]),t._v(" 一个简单的过程调用例子")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191541583.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"过程-函数-的结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程-函数-的结构"}},[t._v("#")]),t._v(" 过程（函数）的结构")]),t._v(" "),a("ul",[a("li",[t._v("一个C过程的大致结构如下：\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("准备阶段")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("形成帧底：push指令和mov指令")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("生成栈帧（如果有需要的话）：sub指令或and指令")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("保存现场（如果有被调用者保存寄存器）：mov指令")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("过程（函数）体")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("分配局部变量空间，并赋值")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("具体处理逻辑，如果遇到函数调用时")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("准备参数：将实参送栈帧入口参数处")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("CALL指令：保存返回地址并转被调用函数")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("在EAX中准备返回参数")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("结束阶段")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("退栈：leave指令或pop指令")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("取返回地址返回：ret指令")])])])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191608819.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"过程调用参数传递举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用参数传递举例"}},[t._v("#")]),t._v(" 过程调用参数传递举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191617180.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191618088.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"过程调用举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用举例"}},[t._v("#")]),t._v(" 过程调用举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191627615.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"递归调用举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归调用举例"}},[t._v("#")]),t._v(" 递归调用举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191634562.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"过程调用的机器级表示-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用的机器级表示-4"}},[t._v("#")]),t._v(" 过程调用的机器级表示")]),t._v(" "),a("ul",[a("li",[t._v("递归函数nn_sum的执行流程\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191635522.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("为支持过程调用，每个过程包含准备阶段和结束阶段。因而")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("每增加一次过程调用，就要增加许多条包含在准备阶段的额外指令，")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("它们对程序的性能影响很大，应尽量避免不必要的过程调用，特别是递归调用")])])]),t._v(" "),a("h3",{attrs:{id:"过程调用举例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过程调用举例-2"}},[t._v("#")]),t._v(" 过程调用举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191651885.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191651906.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"有关-过程调用-的练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有关-过程调用-的练习"}},[t._v("#")]),t._v(" 有关“过程调用”的练习")]),t._v(" "),a("blockquote",[a("p",[t._v("假设P为调用过程，Q为被调用过程，程序在IA-32处理器上执行，以下有关过程调用的叙述，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("B")]),t._v("）。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("A. C语言程序中的函数调用就是过程调用\nB. 从P传到Q的实参无需重新分配空间存放\nC. 从P跳转到Q执行应使用CALL指令\nD. 从Q跳回到P执行应使用RET指令\n")])])]),a("blockquote",[a("p",[t._v("假设P为调用过程，Q为被调用过程，程序在IA-32处理器上执行，以下是C语言程序中过程调用所涉及的操作：\n①过程Q保存P的现场，并为非静态局部变量分配空间\n②过程P将实参存放到Q能访问到的地方\n③过程P将返回地址存放到特定处，并跳转到Q执行\n④过程Q取出返回地址，并跳转会过程P执行\n⑤过程Q恢复P的现场，并释放局部变量所占空间\n⑥执行过程Q的函数体\n过程调用的正确执行步骤是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("C")]),t._v("）。\nA. ②→③→④→①→⑤→⑥\t\t\t\t\t\nB. ②→③→①→④→⑥→⑤\nC. ②→③→①→⑥→⑤→④\t\t\t\t\t\nD. ②→③→①→⑤→⑥→④")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下是有关IA-32/Linux（GCC）的过程调用的叙述，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("A")]),t._v("）\nA. 在过程中通常先使用被调用者保存寄存器\nB. 每个非叶子过程都有一个栈帧，其大小为16B的倍数\nC. EBP寄存器中的内容指向对应栈帧（stack frame）的底部\nD. 每个栈帧底部单元中存放其调用过程的EBP内容")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下是有关IA-32/Linux的过程调用的叙述，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("C")]),t._v("）。\nA. 每进行一次过程调用，用户栈从高地址向低地址增长出一个栈帧\nB. 从被调用过程返回调用过程之前，被调用过程会释放自己的栈帧\nC. 只能通过将栈指针ESP作为基址寄存器来访问用户栈中的数据（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("也可以使用EBP寄存器")]),t._v("）\nD. 过程嵌套调用深度越深，栈中栈帧个数越多，严重时会发生栈溢出")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下是有关C程序的变量作用域和生存期的叙述，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("A")]),t._v("）。\nA. 静态（static型）变量和非静态局部变量都分配在对应栈帧中（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("全局变量和静态变量连续存放在可读写数据区，非静态局部变量分配在栈中")]),t._v("）\nB. 因为非静态局部变量被分配在栈中，所以其作用域仅在过程体内\nC. 非静态局部变量可以与全局变量同名，因为它们被分配在不同存储区\nD. 不同函数中非静态局部变量可以同名，因为它们被分配在不同栈帧中")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下有关递归过程调用的叙述中，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("C")]),t._v("）。\nA. 每次递归调用都会额外执行多条指令，因而时间开销大\nB. 每次递归调用都会生成一个新的栈帧，因而空间开销大\nC. 每次递归调用在栈帧中保存的返回地址都不相同\nD. 递归过程第一个参数的有效地址为R[ebp]+8")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下是一个C语言程序代码：")])]),t._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("caller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("以下关于上述程序代码在 IA-32上执行情况的叙述中，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("C")]),t._v("）。\nA. 变量t1、t2和sum被分配在寄存器或caller函数的栈帧中\nB. 传递参数时t2和t1的值从高地址到低地址依次存入栈中\nC. 入口参数t1和t2的值被分配在add函数的栈帧中\nD. add函数返回时返回值存放在EAX寄存器中")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下是一个C语言程序代码：")])]),t._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("xp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("xp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("yp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("caller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" diff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("“sum"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" diff"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v('d"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" diff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("以下关于上述代码在 IA-32/Linux上执行情况的叙述中，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("B")]),t._v("）。\nA. 变量t1、t2被分配在可读可写的全局静态数据区中\nB. 存入栈中的入口参数可能是0xbfff0004、0xbfff0000（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("存入栈中的入口参数地址应该是相对于当前栈帧指针的偏移量，而不是硬编码的地址值。因此无法确定参数地址具体是什么")]),t._v("）\nC. 在caller中执行leave指令后，入口参数的值还在存储器中\nD. add函数和sub函数的栈帧底部在完全相同的位置处")])]),t._v(" "),a("h3",{attrs:{id:"逆向工程举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逆向工程举例"}},[t._v("#")]),t._v(" 逆向工程举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306191752549.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"数组的分配和访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的分配和访问"}},[t._v("#")]),t._v(" 数组的分配和访问")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192018970.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192019749.png",alt:"image.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192101843.png",alt:"image.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192111650.png",alt:"image.png"}}),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("对buf进行初始化的指令是什么？")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("movl $10, -8(%ebp)    //buf[0]的地址R[ebp]-8，将10赋给buf[0]")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("movl $20, -4(%ebp)  //buf[1]的地址为R[ebp]-4，将20赋buf[1]")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("若buf首地址在EDX中，则获得buf首址的对应指令是什么？")]),t._v(" "),a("span",{staticStyle:{color:"#1100fa"}},[t._v("leal -8(%ebp), %edx  //buf[0]的地址为R[ebp]-8，将buf首址送EDX")])]),t._v(" "),a("h3",{attrs:{id:"数组元素在内存的存放和访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组元素在内存的存放和访问"}},[t._v("#")]),t._v(" 数组元素在内存的存放和访问")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192133560.png",alt:"image.png"}})]),t._v(" "),a("ul",[a("li",[t._v("数值与指针")]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#ff0000"}},[t._v("在指针的目标数据类型与数组类型相同的前提下")]),t._v("，"),a("span",{staticStyle:{color:"#1100fa"}},[t._v("指针变量可以指向数组或数组中任意元素")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("以下两个程序段功能完全相同，都是使ptr指向数组a的第0个元素a[0]。a的值就是其首地址，即")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("a = &a[0]")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("，因而a = ptr，从而有")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("&a[i] = ptr + i = a + i")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("以及")]),a("span",{staticStyle:{color:"#ff0000"}},[t._v("a[i] = ptr[i] = *(ptr + i) = *(a + i)")])])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("小端方式下a[0] = ?，a[1] = ?\n"),a("span",{staticStyle:{color:"#01460f"}},[t._v("a[0] = 0x67452301, a[1] = 0x0efcdab")]),t._v(" "),a("span",{staticStyle:{color:"#ff0000"}},[t._v("数组首地址0x8048A00在ptr中，ptr + i并不是用0x8048A00加i得到，而是等于")]),a("span",{staticStyle:{color:"#1100fa"}},[t._v("0x8048A00 +4*i")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192201729.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"数组元素在内存的存放和访问-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组元素在内存的存放和访问-2"}},[t._v("#")]),t._v(" 数组元素在内存的存放和访问")]),t._v(" "),a("ul",[a("li",[t._v("指针数组和多维数组\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("由若干指向同类目标的指针变量组成的数组称为指针数值")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("其定义的一般形式如下")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"#fa7900"}},[t._v("存储类型 数据类型 *指针数组名[元素个数];")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("例如：“int* a[10];”定义了一个指针数组a，它有10个元素，每个元素都是一个指向int型数据的指针")])])])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#01460f"}},[t._v("一个指针数组可以实现一个二维数组")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192209867.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192220596.png",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"结构体数据的分配和访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构体数据的分配和访问"}},[t._v("#")]),t._v(" 结构体数据的分配和访问")]),t._v(" "),a("ul",[a("li",[t._v("结构体成员在内存的存放和访问\n"),a("ul",[a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("分配在栈中的auto结构型变量的首地址由EBP或ESP来定位")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("分配在静态区的结构型变量首地址是一个确定的静态区地址")])]),t._v(" "),a("li",[a("span",{staticStyle:{color:"#1100fa"}},[t._v("结构型变量x各成员首址可用“基址加偏移量”的寻址方式")]),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs_2/202306192229610.png",alt:"image.png"}})])])])]),t._v(" "),a("h3",{attrs:{id:"越界访问和缓冲区溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#越界访问和缓冲区溢出"}},[t._v("#")]),t._v(" 越界访问和缓冲区溢出")]),t._v(" "),a("ul",[a("li",[t._v("造成缓冲区溢出的原因是没有对栈中作为缓冲区的数组的访问进行越界检查。\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620000827.png",alt:"image.png"}})])]),t._v(" "),a("h1",{attrs:{id:"第四章-程序的链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四章-程序的链接"}},[t._v("#")]),t._v(" 第四章 程序的链接")]),t._v(" "),a("h2",{attrs:{id:"目标文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标文件格式"}},[t._v("#")]),t._v(" 目标文件格式")]),t._v(" "),a("h3",{attrs:{id:"链接器的由来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接器的由来"}},[t._v("#")]),t._v(" 链接器的由来")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620071649.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"链接操作的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接操作的步骤"}},[t._v("#")]),t._v(" 链接操作的步骤")]),t._v(" "),a("ul",[a("li",[t._v("符号解析\n"),a("ul",[a("li",[t._v("程序中有定义和引用的符号（包括变量和函数等）\n"),a("ul",[a("li",[a("code",[t._v("void swap() {...} /*定义符号swap*/")])]),t._v(" "),a("li",[a("code",[t._v("swap(); /*引用符号swap*/")])]),t._v(" "),a("li",[a("code",[t._v("int *xp = &x; /*定义符号xp，引用符号x*/")])])])]),t._v(" "),a("li",[t._v("编译器将定义的符号存放在一个符号表中\n"),a("ul",[a("li",[t._v("符号表是一个结构数组")]),t._v(" "),a("li",[t._v("每个表项包含符号名、长度和位置等信息")])])]),t._v(" "),a("li",[t._v("链接器将每个符号的引用都与一个确定的符号定义建立关联")])])]),t._v(" "),a("li",[t._v("重定位\n"),a("ul",[a("li",[t._v("将多个代码段与数据段分别合并为一个单独的代码段和数据段")]),t._v(" "),a("li",[t._v("计算每个定义的符号在虚拟地址空间中的绝对地址")]),t._v(" "),a("li",[t._v("将可执行文件中符号引用处的地址修改为重定位后的地址信息")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620072315.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"使用链接的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用链接的好处"}},[t._v("#")]),t._v(" 使用链接的好处")]),t._v(" "),a("p",[t._v("链接带来的好处1：模块化")]),t._v(" "),a("ul",[a("li",[t._v("一个程序可分成很多源程序文件")]),t._v(" "),a("li",[t._v("可构建公共函数库，如数学库，标准I/O库等")]),t._v(" "),a("li",[t._v("多人开发、代码重用、开发效率高\n链接带来的好处2：效率高")]),t._v(" "),a("li",[t._v("时间上，可分开编译\n"),a("ul",[a("li",[t._v("只需重新编译被修改的源程序文件，然后重新链接")])])]),t._v(" "),a("li",[t._v("空间上，无需包含共享库所有代码\n"),a("ul",[a("li",[t._v("源程序中无需包含共享库函数的源码，只要直接调用即可，可执行文件和运行时的内存中只需要包含所调用函数的代码而不需要包含整个共享库")])])])]),t._v(" "),a("h3",{attrs:{id:"一个c语言程序举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个c语言程序举例"}},[t._v("#")]),t._v(" 一个C语言程序举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620074709.png",alt:"image.png"}}),t._v("\n局部变量（temp）分配在栈中，不会在过程（函数）外被引用，因此不是符号定义")]),t._v(" "),a("h3",{attrs:{id:"链接过程的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接过程的本质"}},[t._v("#")]),t._v(" 链接过程的本质")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620075734.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"可执行文件的存储器映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可执行文件的存储器映射"}},[t._v("#")]),t._v(" 可执行文件的存储器映射")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620075958.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"三类目标文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三类目标文件"}},[t._v("#")]),t._v(" 三类目标文件")]),t._v(" "),a("ul",[a("li",[t._v("可重定位目标文件（.o）\n"),a("ul",[a("li",[t._v("其代码和数据可和其他可重定位文件合并为可执行文件\n"),a("ul",[a("li",[t._v("每个.o文件由对应的.c文件生成")]),t._v(" "),a("li",[t._v("每个.o文件代码和数据地址都从0开始")])])])])]),t._v(" "),a("li",[t._v("可执行目标文件（默认为a.out）\n"),a("ul",[a("li",[t._v("包含的代码和数据可直接被复制到内存并执行")]),t._v(" "),a("li",[t._v("代码和数据的地址为虚拟地址空间中的地址")])])]),t._v(" "),a("li",[t._v("共享的目标文件（.so）\n"),a("ul",[a("li",[t._v("特殊的可重定位目标文件，能在装入或运行时被装入到内存并自动被链接，称为共享库文件")])])])]),t._v(" "),a("h3",{attrs:{id:"链接视图-可重定位目标文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接视图-可重定位目标文件"}},[t._v("#")]),t._v(" 链接视图——可重定位目标文件")]),t._v(" "),a("ul",[a("li",[t._v("可被链接（合并）生成可执行文件或共享目标文件")]),t._v(" "),a("li",[t._v("静态链接库文件由若干个可重定向目标文件组成")]),t._v(" "),a("li",[t._v("包含代码、数据（已初始化的全局变量和局部静态变量.data和未初始化的全局变量和局部静态变量.bss）")]),t._v(" "),a("li",[t._v("包含重定位信息（指出哪些符号引用处需要重定位）")]),t._v(" "),a("li",[t._v("文件扩展名为.o（相当于Windows中的.obj文件）\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620081331.png",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"executable-and-linkable-format-elf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#executable-and-linkable-format-elf"}},[t._v("#")]),t._v(" Executable and Linkable Format (ELF)")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620082300.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"可重定位目标文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可重定位目标文件格式"}},[t._v("#")]),t._v(" 可重定位目标文件格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620082507.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"bss节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bss节"}},[t._v("#")]),t._v(" .bss节")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620082822.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"可执行目标文件格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可执行目标文件格式"}},[t._v("#")]),t._v(" 可执行目标文件格式")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620083608.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"链接符号的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接符号的类型"}},[t._v("#")]),t._v(" 链接符号的类型")]),t._v(" "),a("ul",[a("li",[t._v("每个可重定位目标模块m都有一个符号表，它包含了在m中定义的符号。分三种（链接器符号）：\n"),a("ul",[a("li",[t._v("Global symbols（模块内部定义的，全局符号）\n"),a("ul",[a("li",[t._v("由模块m定义并能被其他模块引用的符号。例如，非static C函数和非static的C全局变量（指不带static的全局变量）")]),t._v(" "),a("li",[t._v("如，main.c中的全局变量名buf")])])]),t._v(" "),a("li",[t._v("External symbols（外部定义的，外部符号）\n"),a("ul",[a("li",[t._v("由其他模块定义并被模块m引用的全局符号")]),t._v(" "),a("li",[t._v("如main.c中的函数名swap，swap.c中的变量名buf")])])]),t._v(" "),a("li",[t._v("Local symbols（本模块定义并引用的，局部符号）\n"),a("ul",[a("li",[t._v("仅由模块m定义和引用的本地符号。")]),t._v(" "),a("li",[t._v("例如，在模块m中定义的带static的C函数和变量")]),t._v(" "),a("li",[t._v("如，swap.c中的static变量名bufp1\n链接器局部符号不是指程序中的局部变量（分配在栈中的临时性变量），链接器不关心这种局部变量")])])])])])]),t._v(" "),a("h3",{attrs:{id:"符号和符号解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#符号和符号解析"}},[t._v("#")]),t._v(" 符号和符号解析")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620093346.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"全局符号的强、弱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局符号的强、弱"}},[t._v("#")]),t._v(" 全局符号的强、弱")]),t._v(" "),a("ul",[a("li",[t._v("全局符号的强/弱特性\n"),a("ul",[a("li",[t._v("函数名和已初始化的全局变量名是强符号")]),t._v(" "),a("li",[t._v("未初始化的全局变量名是弱符号\n"),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620094429.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620094443.png",alt:"image.png"}})])])])]),t._v(" "),a("h3",{attrs:{id:"链接器对符号的解析规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接器对符号的解析规则"}},[t._v("#")]),t._v(" 链接器对符号的解析规则")]),t._v(" "),a("p",[t._v("符号解析时：只认定一个定义，即每个符号仅占一处存储空间")]),t._v(" "),a("ul",[a("li",[t._v("多重定义符号的处理规则\n"),a("ul",[a("li",[t._v("Rule1：一个符号不允许被多次定义为强符号\n"),a("ul",[a("li",[t._v("强符号只能被定义一次，否则链接错误")])])]),t._v(" "),a("li",[t._v("Rule2：若一个符号被定义为一次强符号、多次弱符号，只认定强定义\n"),a("ul",[a("li",[t._v("弱符号的引用将被解析为其强定义符号")])])]),t._v(" "),a("li",[t._v("Rule3：若有多个弱符号定义，则任选其中一个\n"),a("ul",[a("li",[t._v("-gcc -fno -common：链接时，若遇到有多个若定义的全局符号，则输出一条警告")])])])])])]),t._v(" "),a("h3",{attrs:{id:"多重定义符号的解析举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重定义符号的解析举例"}},[t._v("#")]),t._v(" 多重定义符号的解析举例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620095826.png",alt:"image.png"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620100439.png",alt:"image.png"}}),t._v(" "),a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620100507.png",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"多重定义全局符号的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多重定义全局符号的问题"}},[t._v("#")]),t._v(" 多重定义全局符号的问题")]),t._v(" "),a("ul",[a("li",[t._v("模块间相互引用容易出错，故应尽量避免使用全局变量")]),t._v(" "),a("li",[t._v("一定需要用的话，就按如下规则使用\n"),a("ul",[a("li",[t._v("尽量使用本地变量（static），模块内引用不太会出错")]),t._v(" "),a("li",[t._v("全局变量要赋初值，使成为强符号，易查出链接错误")]),t._v(" "),a("li",[t._v("外部全局变量使用extern，以示其引用的定义在其他模块\n多重定义全局变量会造成一些意想不到的错误，而且是默默发生的，编译系统不会警告，并会在程序执行很久后才能表现出来，且远离错误引发处。特别是在一个具有几百个模块的大型软件中，这类错误很难修正。")])])])]),t._v(" "),a("h3",{attrs:{id:"使用静态库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用静态库"}},[t._v("#")]),t._v(" 使用静态库")]),t._v(" "),a("ul",[a("li",[t._v("链接器对外部引用的解析算法要点如下：\n"),a("ul",[a("li",[t._v("按照命令行给出的顺序扫描.o和.a文件")]),t._v(" "),a("li",[t._v("扫描期间将当前未解析的引用记录到一个列表U中")]),t._v(" "),a("li",[t._v("每遇到一个新的.o或.a中的模块，都试图用其来解析U中的符号")]),t._v(" "),a("li",[t._v("如果扫描到最后，U中还有未被解析的符号，则发生错误")])])]),t._v(" "),a("li",[t._v("问题和对策\n"),a("ul",[a("li",[t._v("能否正确解析与命令行给出的顺序有关")]),t._v(" "),a("li",[t._v("好的做法 ：将静态库放在命令行的最后")])])])]),t._v(" "),a("h3",{attrs:{id:"链接顺序问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接顺序问题"}},[t._v("#")]),t._v(" 链接顺序问题")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/yelishu/note/raw/master/noteImgs/20230620102025.png",alt:"image.png"}})]),t._v(" "),a("h1",{attrs:{id:"测试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试题"}},[t._v("#")]),t._v(" 测试题")]),t._v(" "),a("blockquote",[a("p",[t._v("以下有关冯·诺依曼结构思想的叙述中，错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("B")]),t._v("）\nA.程序由指令构成,计算机能自动执行程序中一条一条指令\nB.指令和数据都放在存储器中,两者在形式上有差别（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("指令和数据在存储器中的位置形式上没有差别，在计算机内部，指令和数据都是以二进制形式存储和表示的")]),t._v("）\nC.计算机内部以二进制形式表示指令和数据\nD.计算机由运算器、存储器、控制器和 I/O 设备组成")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下有关冯.诺依曼计算机结构中指令和数据表示形式的叙述中,正确的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("C")]),t._v("）\nA.\n指令和数据可以从形式上加以区分\nB.\n指令以二进制形式存放,数据以十进制形式存放\nC.\n指令和数据都以二进制形式存放\nD.\n指令和数据都以十进制形式存放")])]),t._v(" "),a("blockquote",[a("p",[t._v("以下有关指令以及指令执行过程的叙述中,错误的是（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("A")]),t._v("）\nA.（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("指令中指定的操作数可以来自寄存器或存储器。")]),t._v("）\n指令中指定的操作数只能是存放在存储器中的数据\nB.\n将要执行的下条指令的地址总是在程序计数器 PC 中\nC.\nCPU 中的控制器对指令操作码进行译码\nD.\n指令由操作码和操作数或操作数的地址码构成")])]),t._v(" "),a("blockquote",[a("p",[t._v("假设你是个卡车司机,要将土豆从爱达荷州的 Boise 运送到明尼苏达州的 Minneapolis,全程 2500 公里。在限速范围内,你估计平均速度为 100 公里/小时,整个行程需要 25 小时。在这段行程中,蒙大拿州境内有 1500 公里,同时蒙大拿州取消了限速要求。那么,如果你希望加速比达到 1.67 倍,在蒙大拿州的速度是多少?（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("D")]),t._v("）\nA.\n150 公里/小时\nB.\n200 公里/小时\nC.\n250 公里/小时\nD.\n300 公里/小时")])]),t._v(" "),a("p",[t._v("$$\n加速比 = \\frac{加速前时间}{加速后时间}\n$$\n$$\n加速比 = \\frac{25}{\\frac{1500}{x} +\\frac"+t._s(1e3)+"{100}} = 1.67，解x =300\n$$")]),t._v(" "),a("blockquote",[a("p",[t._v("若某典型基准测试程序在机器 A 上运行需要 20s,而在机器 B 上的运行时间是 16s,则相对来说,下面说法正确的是:（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("B")]),t._v("）\nA.\n机器 B 的速度是机器 A 的 0.8 倍\nB.\n机器 B 的速度是机器 A 的 1.25 倍\nC.\n机器 A 的速度是机器 B 的 1.25 倍\nD.\n以上都不对")])]),t._v(" "),a("blockquote",[a("p",[t._v("某程序 P 在 A 计算机上运行完毕需 10 秒,A 计算机时钟频率为2GHz。设计一台 B 计算机,该程序 P 在 B 计算机上运行完毕只需6 秒,由于设计原因 P 在 B 计算机运行的时钟周期数是在 A 计算机运行的 1.2 倍,B 计算机的时钟频率是多少?（"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("D")]),t._v("）\nA.\n1.2GHz\nB.\n1GHz\nC.\n8GHz\nD.\n4GHz")])]),t._v(" "),a("p",[t._v("$$\nCPU时间A = \\frac{时钟周期数A}{时钟频率A}\n$$\n$$\nCPU时间B = \\frac{时钟周期数B}{时钟频率B}\n$$")])])}),[],!1,null,null,null);a.default=v.exports}}]);